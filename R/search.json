[{"path":"https://skenvy.github.io/Collatz/R/articles/collatz.html","id":"install","dir":"Articles","previous_headings":"","what":"Install","title":"collatz","text":"following “Getting Started” instructions (can also seen README) download install package, can imported ; can jump right using functions package integer inputs, can use bigz gmp library. function, amongst possible parameters, comes default parameters (P=2,=3,b=1) optional inputs. case, P[=2] modulus check divisibility input , [=3] factor multiply input , b[=1] value add product [=3] input. two basic commands start ; collatz_function reverse_function.","code":"library(collatz) # Optionally library(gmp)"},{"path":"https://skenvy.github.io/Collatz/R/articles/collatz.html","id":"collatz_function","dir":"Articles","previous_headings":"","what":"collatz_function","title":"collatz","text":"Returns output single application Collatz-esque function. Without gmp parameterisation, can try something simple like want change default parameterisation can; want change one work fine, function doesn’t offer protection overflowing integers default. venture world arbitrary integer inputs can use .bigz gmp. Compare two;","code":"collatz_function(5) #> [1] 16 collatz_function(16) #> [1] 8 collatz_function(4, 5, 2, 3) #> [1] 11 collatz_function(3, a=-2) #> [1] -5 collatz_function(99999999999999999999) #> Warning in collatz_function(1e+20): probable complete loss of accuracy in #> modulus #> [1] 5e+19 collatz_function(as.bigz(\"99999999999999999999\")) #> Big Integer ('bigz') : #> [1] 299999999999999999998"},{"path":"https://skenvy.github.io/Collatz/R/articles/collatz.html","id":"reverse_function","dir":"Articles","previous_headings":"","what":"reverse_function","title":"collatz","text":"Calculates values return input Collatz function. Without gmp parameterisation, can try something simple like want change default parameterisation can; want change one work fine, function doesn’t offer protection overflowing integers default. venture world arbitrary integer inputs can use .bigz gmp. Compare two;","code":"reverse_function(1) #> [[1]] #> [1] 2 reverse_function(2) #> [[1]] #> [1] 4 reverse_function(4) #> [[1]] #> [1] 8 #>  #> [[2]] #> [1] 1 reverse_function(3, -3, -2, -5) #> [[1]] #> [1] -9 #>  #> [[2]] #> [1] -4 reverse_function(16, a=5) #> [[1]] #> [1] 32 #>  #> [[2]] #> [1] 3 reverse_function(99999999999999999999) #> Warning in reverse_function(1e+20): probable complete loss of accuracy in #> modulus #> [[1]] #> [1] 2e+20 reverse_function(as.bigz(\"99999999999999999999\")) #> [[1]] #> Big Integer ('bigz') : #> [1] 199999999999999999998"},{"path":"https://skenvy.github.io/Collatz/R/articles/collatz.html","id":"stopping_time","dir":"Articles","previous_headings":"","what":"stopping_time","title":"collatz","text":"Calculates “stopping time”, optionally “total” stopping time. Without gmp parameterisation, can try something simple like want change default parameterisation can; want change one work fine, function doesn’t offer protection overflowing integers default. venture world arbitrary integer inputs can use .bigz gmp. Compare two; extra note, original motivation creating range Collatz themed packages came earlier scripts calculating stopping distances certain parameterisations. inconsequential result observing following, however high k goes, equal 96!","code":"stopping_time(27) #> [1] 96 stopping_time(27, total_stopping_time=TRUE) #> [1] 111 stopping_time(3, 5, 2, 1) #> [1] Inf stopping_time(17, a=5) #> [1] Inf stopping_time(99999999999999999999) #> Warning in collatz_function(initial_value, P = P, a = a, b = b): probable #> complete loss of accuracy in modulus #> Warning in collatz_function(hailstone$values[[k]], P = P, a = a, b = b): #> probable complete loss of accuracy in modulus #> [1] 1 stopping_time(as.bigz(\"99999999999999999999\")) #> [1] 114 stopping_time(27) #> [1] 96 stopping_time(27+as.bigz(\"576460752303423488\")) #> [1] 96 stopping_time(27+(2*as.bigz(\"576460752303423488\"))) #> [1] 96 stopping_time(27+(3*as.bigz(\"576460752303423488\"))) #> [1] 96 stopping_time(27+(4*as.bigz(\"576460752303423488\"))) #> [1] 96"},{"path":"https://skenvy.github.io/Collatz/R/articles/hailstones.html","id":"getting-started","dir":"Articles","previous_headings":"","what":"Getting Started","title":"Hailstone Sequences","text":"following “Get Started + Install” guide;","code":"library(collatz) # Optionally library(gmp)"},{"path":"https://skenvy.github.io/Collatz/R/articles/hailstones.html","id":"hailstone_sequence","dir":"Articles","previous_headings":"","what":"hailstone_sequence","title":"Hailstone Sequences","text":"Compute hailstone sequence, defaults total stopping time; compute regular stopping time; Remove verbose messaging; also stop finding cycle; can parameterised;","code":"hailstone_sequence(5) #> $values #> $values[[1]] #> [1] 5 #>  #> $values[[2]] #> [1] 16 #>  #> $values[[3]] #> [1] 8 #>  #> $values[[4]] #> [1] 4 #>  #> $values[[5]] #> [1] 2 #>  #> $values[[6]] #> [1] 1 #>  #>  #> $terminalCondition #> [1] \"TOTAL_STOPPING_TIME\" #>  #> $terminalStatus #> [1] 5 hailstone_sequence(5, total_stopping_time=FALSE) #> $values #> $values[[1]] #> [1] 5 #>  #> $values[[2]] #> [1] 16 #>  #> $values[[3]] #> [1] 8 #>  #> $values[[4]] #> [1] 4 #>  #>  #> $terminalCondition #> [1] \"STOPPING_TIME\" #>  #> $terminalStatus #> [1] 3 hailstone_sequence(5, verbose=FALSE) #> [[1]] #> [1] 5 #>  #> [[2]] #> [1] 16 #>  #> [[3]] #> [1] 8 #>  #> [[4]] #> [1] 4 #>  #> [[5]] #> [1] 2 #>  #> [[6]] #> [1] 1 hailstone_sequence(-56) #> $values #> $values[[1]] #> [1] -56 #>  #> $values[[2]] #> [1] -28 #>  #> $values[[3]] #> [1] -14 #>  #> $values[[4]] #> [1] -7 #>  #> $values[[5]] #> [1] -20 #>  #> $values[[6]] #> [1] -10 #>  #> $values[[7]] #> [1] -5 #>  #> $values[[8]] #> [1] -14 #>  #>  #> $terminalCondition #> [1] \"CYCLE_LENGTH\" #>  #> $terminalStatus #> [1] 5 hailstone_sequence(3, -1, 3, 1) #> $values #> $values[[1]] #> [1] 3 #>  #> $values[[2]] #> [1] -3 #>  #> $values[[3]] #> [1] 3 #>  #>  #> $terminalCondition #> [1] \"CYCLE_LENGTH\" #>  #> $terminalStatus #> [1] 2"},{"path":"https://skenvy.github.io/Collatz/R/articles/hailstones_576460752303423488.html","id":"getting-started","dir":"Articles","previous_headings":"","what":"Getting Started","title":"Hailstone of 27+576460752303423488","text":"following “Get Started + Install” guide;","code":"library(collatz) # Optionally library(gmp)"},{"path":"https://skenvy.github.io/Collatz/R/articles/hailstones_576460752303423488.html","id":"hailstone_sequence","dir":"Articles","previous_headings":"","what":"hailstone_sequence","title":"Hailstone of 27+576460752303423488","text":"hailstone sequence can run bigz;","code":"hailstone_sequence(27+as.bigz(\"576460752303423488\")) #> $values #> $values[[1]] #> Big Integer ('bigz') : #> [1] 576460752303423515 #>  #> $values[[2]] #> Big Integer ('bigz') : #> [1] 1729382256910270546 #>  #> $values[[3]] #> Big Integer ('bigz') : #> [1] 864691128455135273 #>  #> $values[[4]] #> Big Integer ('bigz') : #> [1] 2594073385365405820 #>  #> $values[[5]] #> Big Integer ('bigz') : #> [1] 1297036692682702910 #>  #> $values[[6]] #> Big Integer ('bigz') : #> [1] 648518346341351455 #>  #> $values[[7]] #> Big Integer ('bigz') : #> [1] 1945555039024054366 #>  #> $values[[8]] #> Big Integer ('bigz') : #> [1] 972777519512027183 #>  #> $values[[9]] #> Big Integer ('bigz') : #> [1] 2918332558536081550 #>  #> $values[[10]] #> Big Integer ('bigz') : #> [1] 1459166279268040775 #>  #> $values[[11]] #> Big Integer ('bigz') : #> [1] 4377498837804122326 #>  #> $values[[12]] #> Big Integer ('bigz') : #> [1] 2188749418902061163 #>  #> $values[[13]] #> Big Integer ('bigz') : #> [1] 6566248256706183490 #>  #> $values[[14]] #> Big Integer ('bigz') : #> [1] 3283124128353091745 #>  #> $values[[15]] #> Big Integer ('bigz') : #> [1] 9849372385059275236 #>  #> $values[[16]] #> Big Integer ('bigz') : #> [1] 4924686192529637618 #>  #> $values[[17]] #> Big Integer ('bigz') : #> [1] 2462343096264818809 #>  #> $values[[18]] #> Big Integer ('bigz') : #> [1] 7387029288794456428 #>  #> $values[[19]] #> Big Integer ('bigz') : #> [1] 3693514644397228214 #>  #> $values[[20]] #> Big Integer ('bigz') : #> [1] 1846757322198614107 #>  #> $values[[21]] #> Big Integer ('bigz') : #> [1] 5540271966595842322 #>  #> $values[[22]] #> Big Integer ('bigz') : #> [1] 2770135983297921161 #>  #> $values[[23]] #> Big Integer ('bigz') : #> [1] 8310407949893763484 #>  #> $values[[24]] #> Big Integer ('bigz') : #> [1] 4155203974946881742 #>  #> $values[[25]] #> Big Integer ('bigz') : #> [1] 2077601987473440871 #>  #> $values[[26]] #> Big Integer ('bigz') : #> [1] 6232805962420322614 #>  #> $values[[27]] #> Big Integer ('bigz') : #> [1] 3116402981210161307 #>  #> $values[[28]] #> Big Integer ('bigz') : #> [1] 9349208943630483922 #>  #> $values[[29]] #> Big Integer ('bigz') : #> [1] 4674604471815241961 #>  #> $values[[30]] #> Big Integer ('bigz') : #> [1] 14023813415445725884 #>  #> $values[[31]] #> Big Integer ('bigz') : #> [1] 7011906707722862942 #>  #> $values[[32]] #> Big Integer ('bigz') : #> [1] 3505953353861431471 #>  #> $values[[33]] #> Big Integer ('bigz') : #> [1] 10517860061584294414 #>  #> $values[[34]] #> Big Integer ('bigz') : #> [1] 5258930030792147207 #>  #> $values[[35]] #> Big Integer ('bigz') : #> [1] 15776790092376441622 #>  #> $values[[36]] #> Big Integer ('bigz') : #> [1] 7888395046188220811 #>  #> $values[[37]] #> Big Integer ('bigz') : #> [1] 23665185138564662434 #>  #> $values[[38]] #> Big Integer ('bigz') : #> [1] 11832592569282331217 #>  #> $values[[39]] #> Big Integer ('bigz') : #> [1] 35497777707846993652 #>  #> $values[[40]] #> Big Integer ('bigz') : #> [1] 17748888853923496826 #>  #> $values[[41]] #> Big Integer ('bigz') : #> [1] 8874444426961748413 #>  #> $values[[42]] #> Big Integer ('bigz') : #> [1] 26623333280885245240 #>  #> $values[[43]] #> Big Integer ('bigz') : #> [1] 13311666640442622620 #>  #> $values[[44]] #> Big Integer ('bigz') : #> [1] 6655833320221311310 #>  #> $values[[45]] #> Big Integer ('bigz') : #> [1] 3327916660110655655 #>  #> $values[[46]] #> Big Integer ('bigz') : #> [1] 9983749980331966966 #>  #> $values[[47]] #> Big Integer ('bigz') : #> [1] 4991874990165983483 #>  #> $values[[48]] #> Big Integer ('bigz') : #> [1] 14975624970497950450 #>  #> $values[[49]] #> Big Integer ('bigz') : #> [1] 7487812485248975225 #>  #> $values[[50]] #> Big Integer ('bigz') : #> [1] 22463437455746925676 #>  #> $values[[51]] #> Big Integer ('bigz') : #> [1] 11231718727873462838 #>  #> $values[[52]] #> Big Integer ('bigz') : #> [1] 5615859363936731419 #>  #> $values[[53]] #> Big Integer ('bigz') : #> [1] 16847578091810194258 #>  #> $values[[54]] #> Big Integer ('bigz') : #> [1] 8423789045905097129 #>  #> $values[[55]] #> Big Integer ('bigz') : #> [1] 25271367137715291388 #>  #> $values[[56]] #> Big Integer ('bigz') : #> [1] 12635683568857645694 #>  #> $values[[57]] #> Big Integer ('bigz') : #> [1] 6317841784428822847 #>  #> $values[[58]] #> Big Integer ('bigz') : #> [1] 18953525353286468542 #>  #> $values[[59]] #> Big Integer ('bigz') : #> [1] 9476762676643234271 #>  #> $values[[60]] #> Big Integer ('bigz') : #> [1] 28430288029929702814 #>  #> $values[[61]] #> Big Integer ('bigz') : #> [1] 14215144014964851407 #>  #> $values[[62]] #> Big Integer ('bigz') : #> [1] 42645432044894554222 #>  #> $values[[63]] #> Big Integer ('bigz') : #> [1] 21322716022447277111 #>  #> $values[[64]] #> Big Integer ('bigz') : #> [1] 63968148067341831334 #>  #> $values[[65]] #> Big Integer ('bigz') : #> [1] 31984074033670915667 #>  #> $values[[66]] #> Big Integer ('bigz') : #> [1] 95952222101012747002 #>  #> $values[[67]] #> Big Integer ('bigz') : #> [1] 47976111050506373501 #>  #> $values[[68]] #> Big Integer ('bigz') : #> [1] 143928333151519120504 #>  #> $values[[69]] #> Big Integer ('bigz') : #> [1] 71964166575759560252 #>  #> $values[[70]] #> Big Integer ('bigz') : #> [1] 35982083287879780126 #>  #> $values[[71]] #> Big Integer ('bigz') : #> [1] 17991041643939890063 #>  #> $values[[72]] #> Big Integer ('bigz') : #> [1] 53973124931819670190 #>  #> $values[[73]] #> Big Integer ('bigz') : #> [1] 26986562465909835095 #>  #> $values[[74]] #> Big Integer ('bigz') : #> [1] 80959687397729505286 #>  #> $values[[75]] #> Big Integer ('bigz') : #> [1] 40479843698864752643 #>  #> $values[[76]] #> Big Integer ('bigz') : #> [1] 121439531096594257930 #>  #> $values[[77]] #> Big Integer ('bigz') : #> [1] 60719765548297128965 #>  #> $values[[78]] #> Big Integer ('bigz') : #> [1] 182159296644891386896 #>  #> $values[[79]] #> Big Integer ('bigz') : #> [1] 91079648322445693448 #>  #> $values[[80]] #> Big Integer ('bigz') : #> [1] 45539824161222846724 #>  #> $values[[81]] #> Big Integer ('bigz') : #> [1] 22769912080611423362 #>  #> $values[[82]] #> Big Integer ('bigz') : #> [1] 11384956040305711681 #>  #> $values[[83]] #> Big Integer ('bigz') : #> [1] 34154868120917135044 #>  #> $values[[84]] #> Big Integer ('bigz') : #> [1] 17077434060458567522 #>  #> $values[[85]] #> Big Integer ('bigz') : #> [1] 8538717030229283761 #>  #> $values[[86]] #> Big Integer ('bigz') : #> [1] 25616151090687851284 #>  #> $values[[87]] #> Big Integer ('bigz') : #> [1] 12808075545343925642 #>  #> $values[[88]] #> Big Integer ('bigz') : #> [1] 6404037772671962821 #>  #> $values[[89]] #> Big Integer ('bigz') : #> [1] 19212113318015888464 #>  #> $values[[90]] #> Big Integer ('bigz') : #> [1] 9606056659007944232 #>  #> $values[[91]] #> Big Integer ('bigz') : #> [1] 4803028329503972116 #>  #> $values[[92]] #> Big Integer ('bigz') : #> [1] 2401514164751986058 #>  #> $values[[93]] #> Big Integer ('bigz') : #> [1] 1200757082375993029 #>  #> $values[[94]] #> Big Integer ('bigz') : #> [1] 3602271247127979088 #>  #> $values[[95]] #> Big Integer ('bigz') : #> [1] 1801135623563989544 #>  #> $values[[96]] #> Big Integer ('bigz') : #> [1] 900567811781994772 #>  #> $values[[97]] #> Big Integer ('bigz') : #> [1] 450283905890997386 #>  #> $values[[98]] #> Big Integer ('bigz') : #> [1] 225141952945498693 #>  #> $values[[99]] #> Big Integer ('bigz') : #> [1] 675425858836496080 #>  #> $values[[100]] #> Big Integer ('bigz') : #> [1] 337712929418248040 #>  #> $values[[101]] #> Big Integer ('bigz') : #> [1] 168856464709124020 #>  #> $values[[102]] #> Big Integer ('bigz') : #> [1] 84428232354562010 #>  #> $values[[103]] #> Big Integer ('bigz') : #> [1] 42214116177281005 #>  #> $values[[104]] #> Big Integer ('bigz') : #> [1] 126642348531843016 #>  #> $values[[105]] #> Big Integer ('bigz') : #> [1] 63321174265921508 #>  #> $values[[106]] #> Big Integer ('bigz') : #> [1] 31660587132960754 #>  #> $values[[107]] #> Big Integer ('bigz') : #> [1] 15830293566480377 #>  #> $values[[108]] #> Big Integer ('bigz') : #> [1] 47490880699441132 #>  #> $values[[109]] #> Big Integer ('bigz') : #> [1] 23745440349720566 #>  #> $values[[110]] #> Big Integer ('bigz') : #> [1] 11872720174860283 #>  #> $values[[111]] #> Big Integer ('bigz') : #> [1] 35618160524580850 #>  #> $values[[112]] #> Big Integer ('bigz') : #> [1] 17809080262290425 #>  #> $values[[113]] #> Big Integer ('bigz') : #> [1] 53427240786871276 #>  #> $values[[114]] #> Big Integer ('bigz') : #> [1] 26713620393435638 #>  #> $values[[115]] #> Big Integer ('bigz') : #> [1] 13356810196717819 #>  #> $values[[116]] #> Big Integer ('bigz') : #> [1] 40070430590153458 #>  #> $values[[117]] #> Big Integer ('bigz') : #> [1] 20035215295076729 #>  #> $values[[118]] #> Big Integer ('bigz') : #> [1] 60105645885230188 #>  #> $values[[119]] #> Big Integer ('bigz') : #> [1] 30052822942615094 #>  #> $values[[120]] #> Big Integer ('bigz') : #> [1] 15026411471307547 #>  #> $values[[121]] #> Big Integer ('bigz') : #> [1] 45079234413922642 #>  #> $values[[122]] #> Big Integer ('bigz') : #> [1] 22539617206961321 #>  #> $values[[123]] #> Big Integer ('bigz') : #> [1] 67618851620883964 #>  #> $values[[124]] #> Big Integer ('bigz') : #> [1] 33809425810441982 #>  #> $values[[125]] #> Big Integer ('bigz') : #> [1] 16904712905220991 #>  #> $values[[126]] #> Big Integer ('bigz') : #> [1] 50714138715662974 #>  #> $values[[127]] #> Big Integer ('bigz') : #> [1] 25357069357831487 #>  #> $values[[128]] #> Big Integer ('bigz') : #> [1] 76071208073494462 #>  #> $values[[129]] #> Big Integer ('bigz') : #> [1] 38035604036747231 #>  #> $values[[130]] #> Big Integer ('bigz') : #> [1] 114106812110241694 #>  #> $values[[131]] #> Big Integer ('bigz') : #> [1] 57053406055120847 #>  #> $values[[132]] #> Big Integer ('bigz') : #> [1] 171160218165362542 #>  #> $values[[133]] #> Big Integer ('bigz') : #> [1] 85580109082681271 #>  #> $values[[134]] #> Big Integer ('bigz') : #> [1] 256740327248043814 #>  #> $values[[135]] #> Big Integer ('bigz') : #> [1] 128370163624021907 #>  #> $values[[136]] #> Big Integer ('bigz') : #> [1] 385110490872065722 #>  #> $values[[137]] #> Big Integer ('bigz') : #> [1] 192555245436032861 #>  #> $values[[138]] #> Big Integer ('bigz') : #> [1] 577665736308098584 #>  #> $values[[139]] #> Big Integer ('bigz') : #> [1] 288832868154049292 #>  #> $values[[140]] #> Big Integer ('bigz') : #> [1] 144416434077024646 #>  #> $values[[141]] #> Big Integer ('bigz') : #> [1] 72208217038512323 #>  #> $values[[142]] #> Big Integer ('bigz') : #> [1] 216624651115536970 #>  #> $values[[143]] #> Big Integer ('bigz') : #> [1] 108312325557768485 #>  #> $values[[144]] #> Big Integer ('bigz') : #> [1] 324936976673305456 #>  #> $values[[145]] #> Big Integer ('bigz') : #> [1] 162468488336652728 #>  #> $values[[146]] #> Big Integer ('bigz') : #> [1] 81234244168326364 #>  #> $values[[147]] #> Big Integer ('bigz') : #> [1] 40617122084163182 #>  #> $values[[148]] #> Big Integer ('bigz') : #> [1] 20308561042081591 #>  #> $values[[149]] #> Big Integer ('bigz') : #> [1] 60925683126244774 #>  #> $values[[150]] #> Big Integer ('bigz') : #> [1] 30462841563122387 #>  #> $values[[151]] #> Big Integer ('bigz') : #> [1] 91388524689367162 #>  #> $values[[152]] #> Big Integer ('bigz') : #> [1] 45694262344683581 #>  #> $values[[153]] #> Big Integer ('bigz') : #> [1] 137082787034050744 #>  #> $values[[154]] #> Big Integer ('bigz') : #> [1] 68541393517025372 #>  #> $values[[155]] #> Big Integer ('bigz') : #> [1] 34270696758512686 #>  #> $values[[156]] #> Big Integer ('bigz') : #> [1] 17135348379256343 #>  #> $values[[157]] #> Big Integer ('bigz') : #> [1] 51406045137769030 #>  #> $values[[158]] #> Big Integer ('bigz') : #> [1] 25703022568884515 #>  #> $values[[159]] #> Big Integer ('bigz') : #> [1] 77109067706653546 #>  #> $values[[160]] #> Big Integer ('bigz') : #> [1] 38554533853326773 #>  #> $values[[161]] #> Big Integer ('bigz') : #> [1] 115663601559980320 #>  #> $values[[162]] #> Big Integer ('bigz') : #> [1] 57831800779990160 #>  #> $values[[163]] #> Big Integer ('bigz') : #> [1] 28915900389995080 #>  #> $values[[164]] #> Big Integer ('bigz') : #> [1] 14457950194997540 #>  #> $values[[165]] #> Big Integer ('bigz') : #> [1] 7228975097498770 #>  #> $values[[166]] #> Big Integer ('bigz') : #> [1] 3614487548749385 #>  #> $values[[167]] #> Big Integer ('bigz') : #> [1] 10843462646248156 #>  #> $values[[168]] #> Big Integer ('bigz') : #> [1] 5421731323124078 #>  #> $values[[169]] #> Big Integer ('bigz') : #> [1] 2710865661562039 #>  #> $values[[170]] #> Big Integer ('bigz') : #> [1] 8132596984686118 #>  #> $values[[171]] #> Big Integer ('bigz') : #> [1] 4066298492343059 #>  #> $values[[172]] #> Big Integer ('bigz') : #> [1] 12198895477029178 #>  #> $values[[173]] #> Big Integer ('bigz') : #> [1] 6099447738514589 #>  #> $values[[174]] #> Big Integer ('bigz') : #> [1] 18298343215543768 #>  #> $values[[175]] #> Big Integer ('bigz') : #> [1] 9149171607771884 #>  #> $values[[176]] #> Big Integer ('bigz') : #> [1] 4574585803885942 #>  #> $values[[177]] #> Big Integer ('bigz') : #> [1] 2287292901942971 #>  #> $values[[178]] #> Big Integer ('bigz') : #> [1] 6861878705828914 #>  #> $values[[179]] #> Big Integer ('bigz') : #> [1] 3430939352914457 #>  #> $values[[180]] #> Big Integer ('bigz') : #> [1] 10292818058743372 #>  #> $values[[181]] #> Big Integer ('bigz') : #> [1] 5146409029371686 #>  #> $values[[182]] #> Big Integer ('bigz') : #> [1] 2573204514685843 #>  #> $values[[183]] #> Big Integer ('bigz') : #> [1] 7719613544057530 #>  #> $values[[184]] #> Big Integer ('bigz') : #> [1] 3859806772028765 #>  #> $values[[185]] #> Big Integer ('bigz') : #> [1] 11579420316086296 #>  #> $values[[186]] #> Big Integer ('bigz') : #> [1] 5789710158043148 #>  #> $values[[187]] #> Big Integer ('bigz') : #> [1] 2894855079021574 #>  #> $values[[188]] #> Big Integer ('bigz') : #> [1] 1447427539510787 #>  #> $values[[189]] #> Big Integer ('bigz') : #> [1] 4342282618532362 #>  #> $values[[190]] #> Big Integer ('bigz') : #> [1] 2171141309266181 #>  #> $values[[191]] #> Big Integer ('bigz') : #> [1] 6513423927798544 #>  #> $values[[192]] #> Big Integer ('bigz') : #> [1] 3256711963899272 #>  #> $values[[193]] #> Big Integer ('bigz') : #> [1] 1628355981949636 #>  #> $values[[194]] #> Big Integer ('bigz') : #> [1] 814177990974818 #>  #> $values[[195]] #> Big Integer ('bigz') : #> [1] 407088995487409 #>  #> $values[[196]] #> Big Integer ('bigz') : #> [1] 1221266986462228 #>  #> $values[[197]] #> Big Integer ('bigz') : #> [1] 610633493231114 #>  #> $values[[198]] #> Big Integer ('bigz') : #> [1] 305316746615557 #>  #> $values[[199]] #> Big Integer ('bigz') : #> [1] 915950239846672 #>  #> $values[[200]] #> Big Integer ('bigz') : #> [1] 457975119923336 #>  #> $values[[201]] #> Big Integer ('bigz') : #> [1] 228987559961668 #>  #> $values[[202]] #> Big Integer ('bigz') : #> [1] 114493779980834 #>  #> $values[[203]] #> Big Integer ('bigz') : #> [1] 57246889990417 #>  #> $values[[204]] #> Big Integer ('bigz') : #> [1] 171740669971252 #>  #> $values[[205]] #> Big Integer ('bigz') : #> [1] 85870334985626 #>  #> $values[[206]] #> Big Integer ('bigz') : #> [1] 42935167492813 #>  #> $values[[207]] #> Big Integer ('bigz') : #> [1] 128805502478440 #>  #> $values[[208]] #> Big Integer ('bigz') : #> [1] 64402751239220 #>  #> $values[[209]] #> Big Integer ('bigz') : #> [1] 32201375619610 #>  #> $values[[210]] #> Big Integer ('bigz') : #> [1] 16100687809805 #>  #> $values[[211]] #> Big Integer ('bigz') : #> [1] 48302063429416 #>  #> $values[[212]] #> Big Integer ('bigz') : #> [1] 24151031714708 #>  #> $values[[213]] #> Big Integer ('bigz') : #> [1] 12075515857354 #>  #> $values[[214]] #> Big Integer ('bigz') : #> [1] 6037757928677 #>  #> $values[[215]] #> Big Integer ('bigz') : #> [1] 18113273786032 #>  #> $values[[216]] #> Big Integer ('bigz') : #> [1] 9056636893016 #>  #> $values[[217]] #> Big Integer ('bigz') : #> [1] 4528318446508 #>  #> $values[[218]] #> Big Integer ('bigz') : #> [1] 2264159223254 #>  #> $values[[219]] #> Big Integer ('bigz') : #> [1] 1132079611627 #>  #> $values[[220]] #> Big Integer ('bigz') : #> [1] 3396238834882 #>  #> $values[[221]] #> Big Integer ('bigz') : #> [1] 1698119417441 #>  #> $values[[222]] #> Big Integer ('bigz') : #> [1] 5094358252324 #>  #> $values[[223]] #> Big Integer ('bigz') : #> [1] 2547179126162 #>  #> $values[[224]] #> Big Integer ('bigz') : #> [1] 1273589563081 #>  #> $values[[225]] #> Big Integer ('bigz') : #> [1] 3820768689244 #>  #> $values[[226]] #> Big Integer ('bigz') : #> [1] 1910384344622 #>  #> $values[[227]] #> Big Integer ('bigz') : #> [1] 955192172311 #>  #> $values[[228]] #> Big Integer ('bigz') : #> [1] 2865576516934 #>  #> $values[[229]] #> Big Integer ('bigz') : #> [1] 1432788258467 #>  #> $values[[230]] #> Big Integer ('bigz') : #> [1] 4298364775402 #>  #> $values[[231]] #> Big Integer ('bigz') : #> [1] 2149182387701 #>  #> $values[[232]] #> Big Integer ('bigz') : #> [1] 6447547163104 #>  #> $values[[233]] #> Big Integer ('bigz') : #> [1] 3223773581552 #>  #> $values[[234]] #> Big Integer ('bigz') : #> [1] 1611886790776 #>  #> $values[[235]] #> Big Integer ('bigz') : #> [1] 805943395388 #>  #> $values[[236]] #> Big Integer ('bigz') : #> [1] 402971697694 #>  #> $values[[237]] #> Big Integer ('bigz') : #> [1] 201485848847 #>  #> $values[[238]] #> Big Integer ('bigz') : #> [1] 604457546542 #>  #> $values[[239]] #> Big Integer ('bigz') : #> [1] 302228773271 #>  #> $values[[240]] #> Big Integer ('bigz') : #> [1] 906686319814 #>  #> $values[[241]] #> Big Integer ('bigz') : #> [1] 453343159907 #>  #> $values[[242]] #> Big Integer ('bigz') : #> [1] 1360029479722 #>  #> $values[[243]] #> Big Integer ('bigz') : #> [1] 680014739861 #>  #> $values[[244]] #> Big Integer ('bigz') : #> [1] 2040044219584 #>  #> $values[[245]] #> Big Integer ('bigz') : #> [1] 1020022109792 #>  #> $values[[246]] #> Big Integer ('bigz') : #> [1] 510011054896 #>  #> $values[[247]] #> Big Integer ('bigz') : #> [1] 255005527448 #>  #> $values[[248]] #> Big Integer ('bigz') : #> [1] 127502763724 #>  #> $values[[249]] #> Big Integer ('bigz') : #> [1] 63751381862 #>  #> $values[[250]] #> Big Integer ('bigz') : #> [1] 31875690931 #>  #> $values[[251]] #> Big Integer ('bigz') : #> [1] 95627072794 #>  #> $values[[252]] #> Big Integer ('bigz') : #> [1] 47813536397 #>  #> $values[[253]] #> Big Integer ('bigz') : #> [1] 143440609192 #>  #> $values[[254]] #> Big Integer ('bigz') : #> [1] 71720304596 #>  #> $values[[255]] #> Big Integer ('bigz') : #> [1] 35860152298 #>  #> $values[[256]] #> Big Integer ('bigz') : #> [1] 17930076149 #>  #> $values[[257]] #> Big Integer ('bigz') : #> [1] 53790228448 #>  #> $values[[258]] #> Big Integer ('bigz') : #> [1] 26895114224 #>  #> $values[[259]] #> Big Integer ('bigz') : #> [1] 13447557112 #>  #> $values[[260]] #> Big Integer ('bigz') : #> [1] 6723778556 #>  #> $values[[261]] #> Big Integer ('bigz') : #> [1] 3361889278 #>  #> $values[[262]] #> Big Integer ('bigz') : #> [1] 1680944639 #>  #> $values[[263]] #> Big Integer ('bigz') : #> [1] 5042833918 #>  #> $values[[264]] #> Big Integer ('bigz') : #> [1] 2521416959 #>  #> $values[[265]] #> Big Integer ('bigz') : #> [1] 7564250878 #>  #> $values[[266]] #> Big Integer ('bigz') : #> [1] 3782125439 #>  #> $values[[267]] #> Big Integer ('bigz') : #> [1] 11346376318 #>  #> $values[[268]] #> Big Integer ('bigz') : #> [1] 5673188159 #>  #> $values[[269]] #> Big Integer ('bigz') : #> [1] 17019564478 #>  #> $values[[270]] #> Big Integer ('bigz') : #> [1] 8509782239 #>  #> $values[[271]] #> Big Integer ('bigz') : #> [1] 25529346718 #>  #> $values[[272]] #> Big Integer ('bigz') : #> [1] 12764673359 #>  #> $values[[273]] #> Big Integer ('bigz') : #> [1] 38294020078 #>  #> $values[[274]] #> Big Integer ('bigz') : #> [1] 19147010039 #>  #> $values[[275]] #> Big Integer ('bigz') : #> [1] 57441030118 #>  #> $values[[276]] #> Big Integer ('bigz') : #> [1] 28720515059 #>  #> $values[[277]] #> Big Integer ('bigz') : #> [1] 86161545178 #>  #> $values[[278]] #> Big Integer ('bigz') : #> [1] 43080772589 #>  #> $values[[279]] #> Big Integer ('bigz') : #> [1] 129242317768 #>  #> $values[[280]] #> Big Integer ('bigz') : #> [1] 64621158884 #>  #> $values[[281]] #> Big Integer ('bigz') : #> [1] 32310579442 #>  #> $values[[282]] #> Big Integer ('bigz') : #> [1] 16155289721 #>  #> $values[[283]] #> Big Integer ('bigz') : #> [1] 48465869164 #>  #> $values[[284]] #> Big Integer ('bigz') : #> [1] 24232934582 #>  #> $values[[285]] #> Big Integer ('bigz') : #> [1] 12116467291 #>  #> $values[[286]] #> Big Integer ('bigz') : #> [1] 36349401874 #>  #> $values[[287]] #> Big Integer ('bigz') : #> [1] 18174700937 #>  #> $values[[288]] #> Big Integer ('bigz') : #> [1] 54524102812 #>  #> $values[[289]] #> Big Integer ('bigz') : #> [1] 27262051406 #>  #> $values[[290]] #> Big Integer ('bigz') : #> [1] 13631025703 #>  #> $values[[291]] #> Big Integer ('bigz') : #> [1] 40893077110 #>  #> $values[[292]] #> Big Integer ('bigz') : #> [1] 20446538555 #>  #> $values[[293]] #> Big Integer ('bigz') : #> [1] 61339615666 #>  #> $values[[294]] #> Big Integer ('bigz') : #> [1] 30669807833 #>  #> $values[[295]] #> Big Integer ('bigz') : #> [1] 92009423500 #>  #> $values[[296]] #> Big Integer ('bigz') : #> [1] 46004711750 #>  #> $values[[297]] #> Big Integer ('bigz') : #> [1] 23002355875 #>  #> $values[[298]] #> Big Integer ('bigz') : #> [1] 69007067626 #>  #> $values[[299]] #> Big Integer ('bigz') : #> [1] 34503533813 #>  #> $values[[300]] #> Big Integer ('bigz') : #> [1] 103510601440 #>  #> $values[[301]] #> Big Integer ('bigz') : #> [1] 51755300720 #>  #> $values[[302]] #> Big Integer ('bigz') : #> [1] 25877650360 #>  #> $values[[303]] #> Big Integer ('bigz') : #> [1] 12938825180 #>  #> $values[[304]] #> Big Integer ('bigz') : #> [1] 6469412590 #>  #> $values[[305]] #> Big Integer ('bigz') : #> [1] 3234706295 #>  #> $values[[306]] #> Big Integer ('bigz') : #> [1] 9704118886 #>  #> $values[[307]] #> Big Integer ('bigz') : #> [1] 4852059443 #>  #> $values[[308]] #> Big Integer ('bigz') : #> [1] 14556178330 #>  #> $values[[309]] #> Big Integer ('bigz') : #> [1] 7278089165 #>  #> $values[[310]] #> Big Integer ('bigz') : #> [1] 21834267496 #>  #> $values[[311]] #> Big Integer ('bigz') : #> [1] 10917133748 #>  #> $values[[312]] #> Big Integer ('bigz') : #> [1] 5458566874 #>  #> $values[[313]] #> Big Integer ('bigz') : #> [1] 2729283437 #>  #> $values[[314]] #> Big Integer ('bigz') : #> [1] 8187850312 #>  #> $values[[315]] #> Big Integer ('bigz') : #> [1] 4093925156 #>  #> $values[[316]] #> Big Integer ('bigz') : #> [1] 2046962578 #>  #> $values[[317]] #> Big Integer ('bigz') : #> [1] 1023481289 #>  #> $values[[318]] #> Big Integer ('bigz') : #> [1] 3070443868 #>  #> $values[[319]] #> Big Integer ('bigz') : #> [1] 1535221934 #>  #> $values[[320]] #> Big Integer ('bigz') : #> [1] 767610967 #>  #> $values[[321]] #> Big Integer ('bigz') : #> [1] 2302832902 #>  #> $values[[322]] #> Big Integer ('bigz') : #> [1] 1151416451 #>  #> $values[[323]] #> Big Integer ('bigz') : #> [1] 3454249354 #>  #> $values[[324]] #> Big Integer ('bigz') : #> [1] 1727124677 #>  #> $values[[325]] #> Big Integer ('bigz') : #> [1] 5181374032 #>  #> $values[[326]] #> Big Integer ('bigz') : #> [1] 2590687016 #>  #> $values[[327]] #> Big Integer ('bigz') : #> [1] 1295343508 #>  #> $values[[328]] #> Big Integer ('bigz') : #> [1] 647671754 #>  #> $values[[329]] #> Big Integer ('bigz') : #> [1] 323835877 #>  #> $values[[330]] #> Big Integer ('bigz') : #> [1] 971507632 #>  #> $values[[331]] #> Big Integer ('bigz') : #> [1] 485753816 #>  #> $values[[332]] #> Big Integer ('bigz') : #> [1] 242876908 #>  #> $values[[333]] #> Big Integer ('bigz') : #> [1] 121438454 #>  #> $values[[334]] #> Big Integer ('bigz') : #> [1] 60719227 #>  #> $values[[335]] #> Big Integer ('bigz') : #> [1] 182157682 #>  #> $values[[336]] #> Big Integer ('bigz') : #> [1] 91078841 #>  #> $values[[337]] #> Big Integer ('bigz') : #> [1] 273236524 #>  #> $values[[338]] #> Big Integer ('bigz') : #> [1] 136618262 #>  #> $values[[339]] #> Big Integer ('bigz') : #> [1] 68309131 #>  #> $values[[340]] #> Big Integer ('bigz') : #> [1] 204927394 #>  #> $values[[341]] #> Big Integer ('bigz') : #> [1] 102463697 #>  #> $values[[342]] #> Big Integer ('bigz') : #> [1] 307391092 #>  #> $values[[343]] #> Big Integer ('bigz') : #> [1] 153695546 #>  #> $values[[344]] #> Big Integer ('bigz') : #> [1] 76847773 #>  #> $values[[345]] #> Big Integer ('bigz') : #> [1] 230543320 #>  #> $values[[346]] #> Big Integer ('bigz') : #> [1] 115271660 #>  #> $values[[347]] #> Big Integer ('bigz') : #> [1] 57635830 #>  #> $values[[348]] #> Big Integer ('bigz') : #> [1] 28817915 #>  #> $values[[349]] #> Big Integer ('bigz') : #> [1] 86453746 #>  #> $values[[350]] #> Big Integer ('bigz') : #> [1] 43226873 #>  #> $values[[351]] #> Big Integer ('bigz') : #> [1] 129680620 #>  #> $values[[352]] #> Big Integer ('bigz') : #> [1] 64840310 #>  #> $values[[353]] #> Big Integer ('bigz') : #> [1] 32420155 #>  #> $values[[354]] #> Big Integer ('bigz') : #> [1] 97260466 #>  #> $values[[355]] #> Big Integer ('bigz') : #> [1] 48630233 #>  #> $values[[356]] #> Big Integer ('bigz') : #> [1] 145890700 #>  #> $values[[357]] #> Big Integer ('bigz') : #> [1] 72945350 #>  #> $values[[358]] #> Big Integer ('bigz') : #> [1] 36472675 #>  #> $values[[359]] #> Big Integer ('bigz') : #> [1] 109418026 #>  #> $values[[360]] #> Big Integer ('bigz') : #> [1] 54709013 #>  #> $values[[361]] #> Big Integer ('bigz') : #> [1] 164127040 #>  #> $values[[362]] #> Big Integer ('bigz') : #> [1] 82063520 #>  #> $values[[363]] #> Big Integer ('bigz') : #> [1] 41031760 #>  #> $values[[364]] #> Big Integer ('bigz') : #> [1] 20515880 #>  #> $values[[365]] #> Big Integer ('bigz') : #> [1] 10257940 #>  #> $values[[366]] #> Big Integer ('bigz') : #> [1] 5128970 #>  #> $values[[367]] #> Big Integer ('bigz') : #> [1] 2564485 #>  #> $values[[368]] #> Big Integer ('bigz') : #> [1] 7693456 #>  #> $values[[369]] #> Big Integer ('bigz') : #> [1] 3846728 #>  #> $values[[370]] #> Big Integer ('bigz') : #> [1] 1923364 #>  #> $values[[371]] #> Big Integer ('bigz') : #> [1] 961682 #>  #> $values[[372]] #> Big Integer ('bigz') : #> [1] 480841 #>  #> $values[[373]] #> Big Integer ('bigz') : #> [1] 1442524 #>  #> $values[[374]] #> Big Integer ('bigz') : #> [1] 721262 #>  #> $values[[375]] #> Big Integer ('bigz') : #> [1] 360631 #>  #> $values[[376]] #> Big Integer ('bigz') : #> [1] 1081894 #>  #> $values[[377]] #> Big Integer ('bigz') : #> [1] 540947 #>  #> $values[[378]] #> Big Integer ('bigz') : #> [1] 1622842 #>  #> $values[[379]] #> Big Integer ('bigz') : #> [1] 811421 #>  #> $values[[380]] #> Big Integer ('bigz') : #> [1] 2434264 #>  #> $values[[381]] #> Big Integer ('bigz') : #> [1] 1217132 #>  #> $values[[382]] #> Big Integer ('bigz') : #> [1] 608566 #>  #> $values[[383]] #> Big Integer ('bigz') : #> [1] 304283 #>  #> $values[[384]] #> Big Integer ('bigz') : #> [1] 912850 #>  #> $values[[385]] #> Big Integer ('bigz') : #> [1] 456425 #>  #> $values[[386]] #> Big Integer ('bigz') : #> [1] 1369276 #>  #> $values[[387]] #> Big Integer ('bigz') : #> [1] 684638 #>  #> $values[[388]] #> Big Integer ('bigz') : #> [1] 342319 #>  #> $values[[389]] #> Big Integer ('bigz') : #> [1] 1026958 #>  #> $values[[390]] #> Big Integer ('bigz') : #> [1] 513479 #>  #> $values[[391]] #> Big Integer ('bigz') : #> [1] 1540438 #>  #> $values[[392]] #> Big Integer ('bigz') : #> [1] 770219 #>  #> $values[[393]] #> Big Integer ('bigz') : #> [1] 2310658 #>  #> $values[[394]] #> Big Integer ('bigz') : #> [1] 1155329 #>  #> $values[[395]] #> Big Integer ('bigz') : #> [1] 3465988 #>  #> $values[[396]] #> Big Integer ('bigz') : #> [1] 1732994 #>  #> $values[[397]] #> Big Integer ('bigz') : #> [1] 866497 #>  #> $values[[398]] #> Big Integer ('bigz') : #> [1] 2599492 #>  #> $values[[399]] #> Big Integer ('bigz') : #> [1] 1299746 #>  #> $values[[400]] #> Big Integer ('bigz') : #> [1] 649873 #>  #> $values[[401]] #> Big Integer ('bigz') : #> [1] 1949620 #>  #> $values[[402]] #> Big Integer ('bigz') : #> [1] 974810 #>  #> $values[[403]] #> Big Integer ('bigz') : #> [1] 487405 #>  #> $values[[404]] #> Big Integer ('bigz') : #> [1] 1462216 #>  #> $values[[405]] #> Big Integer ('bigz') : #> [1] 731108 #>  #> $values[[406]] #> Big Integer ('bigz') : #> [1] 365554 #>  #> $values[[407]] #> Big Integer ('bigz') : #> [1] 182777 #>  #> $values[[408]] #> Big Integer ('bigz') : #> [1] 548332 #>  #> $values[[409]] #> Big Integer ('bigz') : #> [1] 274166 #>  #> $values[[410]] #> Big Integer ('bigz') : #> [1] 137083 #>  #> $values[[411]] #> Big Integer ('bigz') : #> [1] 411250 #>  #> $values[[412]] #> Big Integer ('bigz') : #> [1] 205625 #>  #> $values[[413]] #> Big Integer ('bigz') : #> [1] 616876 #>  #> $values[[414]] #> Big Integer ('bigz') : #> [1] 308438 #>  #> $values[[415]] #> Big Integer ('bigz') : #> [1] 154219 #>  #> $values[[416]] #> Big Integer ('bigz') : #> [1] 462658 #>  #> $values[[417]] #> Big Integer ('bigz') : #> [1] 231329 #>  #> $values[[418]] #> Big Integer ('bigz') : #> [1] 693988 #>  #> $values[[419]] #> Big Integer ('bigz') : #> [1] 346994 #>  #> $values[[420]] #> Big Integer ('bigz') : #> [1] 173497 #>  #> $values[[421]] #> Big Integer ('bigz') : #> [1] 520492 #>  #> $values[[422]] #> Big Integer ('bigz') : #> [1] 260246 #>  #> $values[[423]] #> Big Integer ('bigz') : #> [1] 130123 #>  #> $values[[424]] #> Big Integer ('bigz') : #> [1] 390370 #>  #> $values[[425]] #> Big Integer ('bigz') : #> [1] 195185 #>  #> $values[[426]] #> Big Integer ('bigz') : #> [1] 585556 #>  #> $values[[427]] #> Big Integer ('bigz') : #> [1] 292778 #>  #> $values[[428]] #> Big Integer ('bigz') : #> [1] 146389 #>  #> $values[[429]] #> Big Integer ('bigz') : #> [1] 439168 #>  #> $values[[430]] #> Big Integer ('bigz') : #> [1] 219584 #>  #> $values[[431]] #> Big Integer ('bigz') : #> [1] 109792 #>  #> $values[[432]] #> Big Integer ('bigz') : #> [1] 54896 #>  #> $values[[433]] #> Big Integer ('bigz') : #> [1] 27448 #>  #> $values[[434]] #> Big Integer ('bigz') : #> [1] 13724 #>  #> $values[[435]] #> Big Integer ('bigz') : #> [1] 6862 #>  #> $values[[436]] #> Big Integer ('bigz') : #> [1] 3431 #>  #> $values[[437]] #> Big Integer ('bigz') : #> [1] 10294 #>  #> $values[[438]] #> Big Integer ('bigz') : #> [1] 5147 #>  #> $values[[439]] #> Big Integer ('bigz') : #> [1] 15442 #>  #> $values[[440]] #> Big Integer ('bigz') : #> [1] 7721 #>  #> $values[[441]] #> Big Integer ('bigz') : #> [1] 23164 #>  #> $values[[442]] #> Big Integer ('bigz') : #> [1] 11582 #>  #> $values[[443]] #> Big Integer ('bigz') : #> [1] 5791 #>  #> $values[[444]] #> Big Integer ('bigz') : #> [1] 17374 #>  #> $values[[445]] #> Big Integer ('bigz') : #> [1] 8687 #>  #> $values[[446]] #> Big Integer ('bigz') : #> [1] 26062 #>  #> $values[[447]] #> Big Integer ('bigz') : #> [1] 13031 #>  #> $values[[448]] #> Big Integer ('bigz') : #> [1] 39094 #>  #> $values[[449]] #> Big Integer ('bigz') : #> [1] 19547 #>  #> $values[[450]] #> Big Integer ('bigz') : #> [1] 58642 #>  #> $values[[451]] #> Big Integer ('bigz') : #> [1] 29321 #>  #> $values[[452]] #> Big Integer ('bigz') : #> [1] 87964 #>  #> $values[[453]] #> Big Integer ('bigz') : #> [1] 43982 #>  #> $values[[454]] #> Big Integer ('bigz') : #> [1] 21991 #>  #> $values[[455]] #> Big Integer ('bigz') : #> [1] 65974 #>  #> $values[[456]] #> Big Integer ('bigz') : #> [1] 32987 #>  #> $values[[457]] #> Big Integer ('bigz') : #> [1] 98962 #>  #> $values[[458]] #> Big Integer ('bigz') : #> [1] 49481 #>  #> $values[[459]] #> Big Integer ('bigz') : #> [1] 148444 #>  #> $values[[460]] #> Big Integer ('bigz') : #> [1] 74222 #>  #> $values[[461]] #> Big Integer ('bigz') : #> [1] 37111 #>  #> $values[[462]] #> Big Integer ('bigz') : #> [1] 111334 #>  #> $values[[463]] #> Big Integer ('bigz') : #> [1] 55667 #>  #> $values[[464]] #> Big Integer ('bigz') : #> [1] 167002 #>  #> $values[[465]] #> Big Integer ('bigz') : #> [1] 83501 #>  #> $values[[466]] #> Big Integer ('bigz') : #> [1] 250504 #>  #> $values[[467]] #> Big Integer ('bigz') : #> [1] 125252 #>  #> $values[[468]] #> Big Integer ('bigz') : #> [1] 62626 #>  #> $values[[469]] #> Big Integer ('bigz') : #> [1] 31313 #>  #> $values[[470]] #> Big Integer ('bigz') : #> [1] 93940 #>  #> $values[[471]] #> Big Integer ('bigz') : #> [1] 46970 #>  #> $values[[472]] #> Big Integer ('bigz') : #> [1] 23485 #>  #> $values[[473]] #> Big Integer ('bigz') : #> [1] 70456 #>  #> $values[[474]] #> Big Integer ('bigz') : #> [1] 35228 #>  #> $values[[475]] #> Big Integer ('bigz') : #> [1] 17614 #>  #> $values[[476]] #> Big Integer ('bigz') : #> [1] 8807 #>  #> $values[[477]] #> Big Integer ('bigz') : #> [1] 26422 #>  #> $values[[478]] #> Big Integer ('bigz') : #> [1] 13211 #>  #> $values[[479]] #> Big Integer ('bigz') : #> [1] 39634 #>  #> $values[[480]] #> Big Integer ('bigz') : #> [1] 19817 #>  #> $values[[481]] #> Big Integer ('bigz') : #> [1] 59452 #>  #> $values[[482]] #> Big Integer ('bigz') : #> [1] 29726 #>  #> $values[[483]] #> Big Integer ('bigz') : #> [1] 14863 #>  #> $values[[484]] #> Big Integer ('bigz') : #> [1] 44590 #>  #> $values[[485]] #> Big Integer ('bigz') : #> [1] 22295 #>  #> $values[[486]] #> Big Integer ('bigz') : #> [1] 66886 #>  #> $values[[487]] #> Big Integer ('bigz') : #> [1] 33443 #>  #> $values[[488]] #> Big Integer ('bigz') : #> [1] 100330 #>  #> $values[[489]] #> Big Integer ('bigz') : #> [1] 50165 #>  #> $values[[490]] #> Big Integer ('bigz') : #> [1] 150496 #>  #> $values[[491]] #> Big Integer ('bigz') : #> [1] 75248 #>  #> $values[[492]] #> Big Integer ('bigz') : #> [1] 37624 #>  #> $values[[493]] #> Big Integer ('bigz') : #> [1] 18812 #>  #> $values[[494]] #> Big Integer ('bigz') : #> [1] 9406 #>  #> $values[[495]] #> Big Integer ('bigz') : #> [1] 4703 #>  #> $values[[496]] #> Big Integer ('bigz') : #> [1] 14110 #>  #> $values[[497]] #> Big Integer ('bigz') : #> [1] 7055 #>  #> $values[[498]] #> Big Integer ('bigz') : #> [1] 21166 #>  #> $values[[499]] #> Big Integer ('bigz') : #> [1] 10583 #>  #> $values[[500]] #> Big Integer ('bigz') : #> [1] 31750 #>  #> $values[[501]] #> Big Integer ('bigz') : #> [1] 15875 #>  #> $values[[502]] #> Big Integer ('bigz') : #> [1] 47626 #>  #> $values[[503]] #> Big Integer ('bigz') : #> [1] 23813 #>  #> $values[[504]] #> Big Integer ('bigz') : #> [1] 71440 #>  #> $values[[505]] #> Big Integer ('bigz') : #> [1] 35720 #>  #> $values[[506]] #> Big Integer ('bigz') : #> [1] 17860 #>  #> $values[[507]] #> Big Integer ('bigz') : #> [1] 8930 #>  #> $values[[508]] #> Big Integer ('bigz') : #> [1] 4465 #>  #> $values[[509]] #> Big Integer ('bigz') : #> [1] 13396 #>  #> $values[[510]] #> Big Integer ('bigz') : #> [1] 6698 #>  #> $values[[511]] #> Big Integer ('bigz') : #> [1] 3349 #>  #> $values[[512]] #> Big Integer ('bigz') : #> [1] 10048 #>  #> $values[[513]] #> Big Integer ('bigz') : #> [1] 5024 #>  #> $values[[514]] #> Big Integer ('bigz') : #> [1] 2512 #>  #> $values[[515]] #> Big Integer ('bigz') : #> [1] 1256 #>  #> $values[[516]] #> Big Integer ('bigz') : #> [1] 628 #>  #> $values[[517]] #> Big Integer ('bigz') : #> [1] 314 #>  #> $values[[518]] #> Big Integer ('bigz') : #> [1] 157 #>  #> $values[[519]] #> Big Integer ('bigz') : #> [1] 472 #>  #> $values[[520]] #> Big Integer ('bigz') : #> [1] 236 #>  #> $values[[521]] #> Big Integer ('bigz') : #> [1] 118 #>  #> $values[[522]] #> Big Integer ('bigz') : #> [1] 59 #>  #> $values[[523]] #> Big Integer ('bigz') : #> [1] 178 #>  #> $values[[524]] #> Big Integer ('bigz') : #> [1] 89 #>  #> $values[[525]] #> Big Integer ('bigz') : #> [1] 268 #>  #> $values[[526]] #> Big Integer ('bigz') : #> [1] 134 #>  #> $values[[527]] #> Big Integer ('bigz') : #> [1] 67 #>  #> $values[[528]] #> Big Integer ('bigz') : #> [1] 202 #>  #> $values[[529]] #> Big Integer ('bigz') : #> [1] 101 #>  #> $values[[530]] #> Big Integer ('bigz') : #> [1] 304 #>  #> $values[[531]] #> Big Integer ('bigz') : #> [1] 152 #>  #> $values[[532]] #> Big Integer ('bigz') : #> [1] 76 #>  #> $values[[533]] #> Big Integer ('bigz') : #> [1] 38 #>  #> $values[[534]] #> Big Integer ('bigz') : #> [1] 19 #>  #> $values[[535]] #> Big Integer ('bigz') : #> [1] 58 #>  #> $values[[536]] #> Big Integer ('bigz') : #> [1] 29 #>  #> $values[[537]] #> Big Integer ('bigz') : #> [1] 88 #>  #> $values[[538]] #> Big Integer ('bigz') : #> [1] 44 #>  #> $values[[539]] #> Big Integer ('bigz') : #> [1] 22 #>  #> $values[[540]] #> Big Integer ('bigz') : #> [1] 11 #>  #> $values[[541]] #> Big Integer ('bigz') : #> [1] 34 #>  #> $values[[542]] #> Big Integer ('bigz') : #> [1] 17 #>  #> $values[[543]] #> Big Integer ('bigz') : #> [1] 52 #>  #> $values[[544]] #> Big Integer ('bigz') : #> [1] 26 #>  #> $values[[545]] #> Big Integer ('bigz') : #> [1] 13 #>  #> $values[[546]] #> Big Integer ('bigz') : #> [1] 40 #>  #> $values[[547]] #> Big Integer ('bigz') : #> [1] 20 #>  #> $values[[548]] #> Big Integer ('bigz') : #> [1] 10 #>  #> $values[[549]] #> Big Integer ('bigz') : #> [1] 5 #>  #> $values[[550]] #> Big Integer ('bigz') : #> [1] 16 #>  #> $values[[551]] #> Big Integer ('bigz') : #> [1] 8 #>  #> $values[[552]] #> Big Integer ('bigz') : #> [1] 4 #>  #> $values[[553]] #> Big Integer ('bigz') : #> [1] 2 #>  #> $values[[554]] #> Big Integer ('bigz') : #> [1] 1 #>  #>  #> $terminalCondition #> [1] \"TOTAL_STOPPING_TIME\" #>  #> $terminalStatus #> [1] 553"},{"path":"https://skenvy.github.io/Collatz/R/articles/treegraphs.html","id":"getting-started","dir":"Articles","previous_headings":"","what":"Getting Started","title":"Tree Graphs","text":"following “Get Started + Install” guide;","code":"library(collatz) # Optionally library(gmp)"},{"path":"https://skenvy.github.io/Collatz/R/articles/treegraphs.html","id":"tree_graph","dir":"Articles","previous_headings":"","what":"tree_graph","title":"Tree Graphs","text":"Compute tree graph, takes value initialise tree , “orbit distance” many layers deep tree compute; also stop finding cycle; can parameterised; b multiple , Pa, 0 can reverse; tree graph can run bigz;","code":"tree_graph(16, 3) #> $`16` #> $`16`$`32` #> $`16`$`32`$`64` #> $`16`$`32`$`64`$`128` #> [1] NA #>  #> $`16`$`32`$`64`$`21` #> [1] NA #>  #>  #>  #> $`16`$`5` #> $`16`$`5`$`10` #> $`16`$`5`$`10`$`20` #> [1] NA #>  #> $`16`$`5`$`10`$`3` #> [1] NA tree_graph(4, 3) #> $`4` #> $`4`$`8` #> $`4`$`8`$`16` #> $`4`$`8`$`16`$`32` #> [1] NA #>  #> $`4`$`8`$`16`$`5` #> [1] NA #>  #>  #>  #> $`4`$`1` #> $`4`$`1`$`2` #> $`4`$`1`$`2`$CYCLE_INIT #> [1] 4 tree_graph(1, 1, -3, -2, -5) #> $`1` #> $`1`$`-3` #> [1] NA tree_graph(0, 1, 17, 2, -6) #> $`0` #> $`0`$CYCLE_INIT #> [1] 0 #>  #> $`0`$`3` #> [1] NA tree_graph((27+as.bigz(\"576460752303423488\")), 3) #> $`576460752303423515` #> $`576460752303423515`$`1152921504606847030` #> $`576460752303423515`$`1152921504606847030`$`2305843009213694060` #> $`576460752303423515`$`1152921504606847030`$`2305843009213694060`$`4611686018427388120` #> [1] NA #>  #>  #> $`576460752303423515`$`1152921504606847030`$`384307168202282343` #> $`576460752303423515`$`1152921504606847030`$`384307168202282343`$`768614336404564686` #> [1] NA"},{"path":"https://skenvy.github.io/Collatz/R/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Nathan Levett. Author, maintainer.","code":""},{"path":"https://skenvy.github.io/Collatz/R/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Levett N (2022). collatz: Functions Related Collatz/Syracuse/3n+1 Problem. https://github.com/Skenvy/Collatz, https://github.com/Skenvy/Collatz/tree/main/R, https://skenvy.github.io/Collatz/R/, https://skenvy.github.io/Collatz/R/pdf/.","code":"@Manual{,   title = {collatz: Functions Related to the Collatz/Syracuse/3n+1 Problem},   author = {Nathan Levett},   year = {2022},   note = {https://github.com/Skenvy/Collatz, https://github.com/Skenvy/Collatz/tree/main/R, https://skenvy.github.io/Collatz/R/, https://skenvy.github.io/Collatz/R/pdf/}, }"},{"path":"https://skenvy.github.io/Collatz/R/devlog.html","id":null,"dir":"","previous_headings":"","what":"Devlog","title":"Devlog","text":"R, CRAN. ’s also R Technical Papers, Getting Help R, R Manuals (includes Writing R Extensions (covers create packages)), Certification (includes R: Software Development Life Cycle). Besides may include “” start writing package, CRAN page includes links CRAN Repository Policy Submit package CRAN also useful read see process expects! writing , ’s probably worthwhile retroactively coming back just saying ’s impossible learn R without seeing Hadley Wickham appearing behind every curtin, many packages end using come . intentionally tried stay free shackles IDE run everything scripts / recipes, RStudio might actually worth checking . Previously, ’ve using GitHub Trending  language starting point look highely ranked existing repos chose organise projects, stars last week R repo one. ’ll collect examples look – {rstudio/shiny, tidyverse/ggplot2, r-lib/pkgdown, satijalab/seurat, facebookexperimental/Robyn}. blog might useful . beginning ’s worth mentioning might “stick mud” language far goal complete CICD languages goes, CRAN submission page appears intend manual submission code, although might possible hack something together automates interacting form upload submission, clearly intended. search “R” actions marketplace reveals action automating submission package, feels like perverse serendipity, fourth result Julia: R&R ~ Release Register package! top hit R-actions doesn’t look “official” worth reading, even ’d enjoy challenge trying implement . “official” appears handful actions organisation “insightsengineering”, . Going google see action exists install R CI step reveals r-lib/actions repository, official repo bunch actions, don’t appear marketplace actions bundled one repo! Australian, ’ll download latest R csiro mirror windows follow WSL. wait download, ’ll checkout Writing R Extensions 1.1 Package structure. ’ll start “Hello World” file, prompts download extension. Part way filling DESCRIPTION file, look whether apache license acceptable , makes explicit mention others “main” license. ’s also worth noting examples ’ve looked fulfill required existence ./man/*.Rd via “roxygen2”? need look ! ’d like “first” check run R CMD check ., appears doesn’t like recommended use Authors@R: c(person(\"Nathan\", \"Levett\", role = c(\"aut\", \"cre\"), email = \"nathan..z.levett@gmail.com\")) line DESCRIPTION place normal Author Maintainer fields. Although, CRAN package policy states “Please ensure R CMD check ---cran run tarball uploaded”, suppose ’ll avoid checking “” build checking. Also although earlier page list licenses common R, list likely accepted CRAN , include Apache v2. ’s also comprehensive list previously distributed packages , just “current” ones. also appears searching Collatz yields nothing. ’s also “incoming” list packages prior actual approval ’s worth bookmarking. Lastly, earlier “submit” page yielding link, appears accurate link exists policy page, links submit . ’s also “submission checklist”. ’s “arbitrary integer precision” packages CRAN, doesn’t seem like ’s built arbitrary integer package, ’ll need pick gmp, Rmpfr, bignum, Ryacas. Even without constant suggestion simplicity Go , lack simplicity installing R packages starting become frustrating, constant need compare errors across handful sites confirm new attempt progressively install packages working. installation windows side keeps popping message language server required, even opening admin, installation ’s attempting, C:\\Program Files\\R\\R-4.2.1\\bin\\R.exe --silent --slave ---save ---restore -e install.packages('languageserver', repos='https://cran.r-project.org/') keeps failing message package doesn’t exist version, trying Rscript -e 'install.packages(\"devtools\")' WSL took around hour run , ended 25 Warnings packages couldn’t install, recommendations whole host debian packages need installed first (revealed necessity subsequent iterative installation attempts). even R doesn’t pretense simplicity Go , ’s safe say package management anything simple. annoyingly packages installable regardless package failing , downstream packages rely still attempt download install fail missing dependency already known failed earlier. , coupled installation stringi package somehow working always downloads differently sized package expects errors (timesout 60 seconds download 7.7Mb), means run command install devtools multiple times, ’ve realised idempotent, quite thirsty, taking 4Gb space far. difficulty getting something basic working make question language popular, least, creating packages . ’s frustrating also keeps failing installing “Font Manager” library. ’s also anti-idempotent one round installing dependencies, removed one ones succeded installing minutes earlier now won’t reinstall attempts. took around 20 attempts, everything finally downloaded installed, hefty list debian packages also required devtools. ’s lot ways generally installing packages less painful, also lot less painful devtools package made reference minimum supported environments require already installed allow work. make setup_debian recipe attempts partially current release, although wasn’t fresh ubuntu image, can’t guarantee didn’t also already required packages installed thus added list. tried see R related image docker-hub, docker official image points repo rocker-org/rocker. Searching page mention “devtools” yields link rocker/tidyverse images link repo rocker-org/rocker-versioned2, whose latest tidyverse dockerfile (besides starting rstudio base) runs script, apt insall set libraries. ’s necessary right now identify minimum set installable libraries devtools, superset information definitely obtainable. ’ll pick gmp (pdf) arb ints. appears work like magic, woah. ’s basically “’s free real-estate” meme. using bigz class provides instead ints adds additional overhead even requires multiple function definitions, can stay tidy python, even though need library arbitrary integers, ’s real neat. function reverse function appearing work, lets look introducing unit tests. main name ’s always popping “testthat” (staggeringly large “Reverse suggests” list, multiple times long devtools package). can initiate “testthat” Rscript -e 'usethis::use_testthat()'. Running provides source many reverse suggestions second action takes “✔ Adding ‘testthat’ Suggests field DESCRIPTION”, already planning adding, occurs ’s funny running “testthat” adds suggestions, devtools add suggestions. continue setting tests, can run Rscript -e 'usethis::use_test(\"Collatz\")', copy tests used java version. realised upon testing first time gh action irritatingly long time install dependencies recompile, , can just reuse tidyverse images provided , exist far back enough 3.5.0 tagged image, earliest version want test (minimum version dependency, gmp). tests now working workflow, last things check pkgdown creating site, first, roxygen2 generating ./man/! seems Roxygen doesn’t like DESCRIPTION including Encoding: UTF-8 CRAN standard ASCII, ’d trying stick , roxygen adds much benefit use . minimum setup roxygen, let’s look using pkgdown. Start Rscript -e 'usethis::use_pkgdown()'. fair amount experimenting setting generating pdf without commenting , finally got working. Locally work 50/50 (reason just casually fails half time, works fine half time, back back invocations background changes..) took installing debian texinfo package rocker/tidyverse container get manage generate pdf workflow. ’re now ready ; 1. git checkout --orphan gh-pages-R 1. rm .git/index ; git clean -fdx 1. git commit -m \"Initial empty orphan\" --allow-empty 1. git push --set-upstream origin gh-pages-R means now target deploy docs , test fine merge main gh-pages branch. funny quirk pkgdown appears requires newlines header lines markdown files converts home page, readme formatted slightly differently, although visually inconsequentially , others. ’ve reached stage can generate docs, test successfully across ubuntu, mac windows, complete CRAN check latest. ’ll merge main now get 0.1.0 release main adding vignettes hailstone tree graph functions. ’ve released version 0.1.0, ’ve realised desire keep roxygen2 generated namespace man folder changes generated CI hit roadblock; using devtools install github require state repo contents tarballs , ’ve got swap around make sure checkin man folder namespace changes, means adding ability fail workflow detects change hasn’t checked . led discovering semi-bug, using job container github actions, repository checked actions/checkout step won’t owned user inside job container used evoke run commands, need add checkout safe directory can compare error diff. Now need start looking vignettes Rscript -e 'usethis::use_vignette(\"-vignette\")'. Well, ’ve got content sorted, uncovered unusual behaviour didn’t see bigz isn’t easy use iterative sense, .e. like append’ing list looping . caught bug surfaced using vignette tree graphing function using bigz, error can reproduced something like append(list(), gmp::.bigz(5)), yields; reverse function tree graph uses places append can operate bigz, seems doesn’t behave well . example; list initialised numeric, f <- list(1), appending bigz doesn’t produce error, adds entire raw contents. example, resulting list adding small bigz number 17 elements long. f example initialised bigz, result , first element bigz following 16 entries raw contents appended bigz. HOWEVER, solution! wrapping appended content another list() invocation, properly separate . releasing version 1 R implementation, ’ve uploaded CRAN, resulted email “CRAN Submission collatz 1.0.0 - Confirmation Link” link https://<some_cran_mirror>/cransubmit/conf_mail.php?code=<unique_submission_code> confirm submission, included comments submission. confirming upload, tarball appeared incoming/pretest section, 8 minutes later recieving “package collatz_1.0.0.tar.gz auto-processed pending manual inspection” email, included (along upload now instead appearing incoming/inspect) windows check ; debian check ; find funny x86_64-w64-mingw32 check included parameterisation (7:9) Possibly misspelled words DESCRIPTION, github pages notes yielded http 200, x86_64-pc-linux-gnu check complain parameterisation, github pages links yielded http 301. ’s now following day, ’ve already received follow email fixing links description returned 301. don’t want clog commit history gh-pages-R branch 80+kb pdfs, want keep pdf’s generated relevant, like R v1.0.0 CRAN submission, rather v1.0.1+, might feel dirty, ’m gonna force push removing last commits gh-pages gh-pages-R remove v1.0.0 release tag, merging comment, fix description, recreates “version 1.0.0”. involved manually deleting release github, ; Well, ’s now second submission’s feedback requesting changes. Like last time, went incoming/pretest section, later appearing incoming/inspect). time sat incoming/newbies , incoming/BA. seems top folders simply initials reviewers. feedback time included significantly last time, makes question volunteers checks – automated , much done steps, consistent across reviewers. ’ve seen several prominent blog posts trials tribulations reshaping package ad infinitum certain members CRAN team happy , explicitly warning reader prepared feedback requesting minutiae changes, although greatful team. ’m certainly suggesting ’s reasonable volunteer maintainers additive requests align package expect desire packages host CRAN, system maintain trying craft something meet goals burden rests , although strike odd R language grew popularity environment anti-conducive distribution packages, via high barrier entry ecosystem automated, seems consistent means confirming package suitability amongst volunteers, unless manner provide feedback limits provide feedback relevant stage, .e. numbered item checklist invalid ahead others, included feedback, opposed issues mentioned one check reply. Climbing soapbox, specific feedback submission three fold; 1. request add “references describing methods package” – “description field DESCRIPTION file”. suggest <https:...> field accepted. Although browsing “CRAN Task View: Numerical Mathematics” page examples, ’s sparse even find examples include notion reference let alone structured referencing style similar requested email. ’s hard know much one legitimate request versus “nice ”, also seems seldom used packages ’ve checked, ’ll see adding now. Writing R Extensions: DESCRIPTION file make mention necessity references, although one passing reference inclusion URLs, “URLs enclosed angle brackets, e.g. ‘https://www.r-project.org’: see also Specifying URLs.”. 1. request remove ‘” | file LICENSE” file’ reason “needed case attribution requirements possible restrictions. Hence please omit .” dug around looking requirment/expectation CRAN Repository Policy Writing R Extensions: Licensing, appears latter, several paragraphs describing go including file LICENSE, shouldn’t issues added, append | file LICENSE modify standard license + file LICENSE make reference wanting submissions include license file unnecessarily, .e. “please arrange install yet another copy GNU COPYING COPYING.LIB files refer copies https://www.R-project.org/Licenses/” although last sentence ““standard” licenses rather license templates need additional information completed via ‘+ file LICENSE’ (‘+’ surrounded spaces)” contest , wait reply volunteer reviewed . replied confirming despite Apache License’s inclusion name / date field, included + file LICENSE. 1. “Please add small executable examples Rd-files illustrate use exported function also enable automatic testing.” something really seem example packages looked earlier, focus sort content either tests “automatic testing”, vignettes, also tested automatically also verbose explanations use functions. bit look packages, appear include examples function docs . Arguably just provides clutter anything else doesn’t really make easier follow especially elsewise mechanism displaying content, like vignettes, Writing R Extensions: Documenting functions appear include possibility adding examples, stated required. suppose add , also look Writing R Extensions: Mathematics .","code":"> append(list(), as.bigz(5)) Error in c_bigz(argL) :    only logical, numeric or character (atomic) vectors can be coerced to 'bigz' > f <- list() > f <- append(f, as.bigz(3)) Error in c_bigz(argL) :    only logical, numeric or character (atomic) vectors can be coerced to 'bigz' > f <- list() > f <- append(f,list(as.bigz(1))) > f [[1]] Big Integer ('bigz') : [1] 1 Log dir: <https://win-builder.r-project.org/incoming_pretest/collatz_1.0.0_20220827_180118/> The files will be removed after roughly 7 days. Installation time in seconds: 5 Check time in seconds: 88 R Under development (unstable) (2022-08-25 r82762 ucrt)  Pretests results: Windows: <https://win-builder.r-project.org/incoming_pretest/collatz_1.0.0_20220827_180118/Windows/00check.log> Status: 1 NOTE Debian: <https://win-builder.r-project.org/incoming_pretest/collatz_1.0.0_20220827_180118/Debian/00check.log> Status: 1 NOTE * using log directory 'd:/RCompile/CRANincoming/R-devel/collatz.Rcheck' * using R Under development (unstable) (2022-08-25 r82762 ucrt) * using platform: x86_64-w64-mingw32 (64-bit) * using session charset: UTF-8 * checking for file 'collatz/DESCRIPTION' ... OK * this is package 'collatz' version '1.0.0' * package encoding: UTF-8 * checking CRAN incoming feasibility ... [14s] NOTE Maintainer: 'Nathan Levett <nathan.a.z.levett@gmail.com>'  New submission  Possibly misspelled words in DESCRIPTION:   Collatz (5:33, 6:68)   parameterisation (7:9)  Found the following (possibly) invalid URLs:   URL: http://localhost:4321     From: README.md     Status: Error     Message: Failed to connect to localhost port 4321: Connection refused   URL: https://skenvy.github.io/Collatz/R (moved to https://skenvy.github.io/Collatz/R/)     From: DESCRIPTION     Status: 200     Message: OK   URL: https://skenvy.github.io/Collatz/R/pdf (moved to https://skenvy.github.io/Collatz/R/pdf/)     From: DESCRIPTION     Status: 200     Message: OK * checking package namespace information ... OK * checking package dependencies ... OK * checking if this is a source package ... OK * checking if there is a namespace ... OK * checking for hidden files and directories ... OK * checking for portable file names ... OK * checking whether package 'collatz' can be installed ... OK * checking installed package size ... OK * checking package directory ... OK * checking for future file timestamps ... OK * checking 'build' directory ... OK * checking DESCRIPTION meta-information ... OK * checking top-level files ... OK * checking for left-over files ... OK * checking index information ... OK * checking package subdirectories ... OK * checking R files for non-ASCII characters ... OK * checking R files for syntax errors ... OK * checking whether the package can be loaded ... [1s] OK * checking whether the package can be loaded with stated dependencies ... [0s] OK * checking whether the package can be unloaded cleanly ... [0s] OK * checking whether the namespace can be loaded with stated dependencies ... [0s] OK * checking whether the namespace can be unloaded cleanly ... [1s] OK * checking loading without being on the library search path ... [1s] OK * checking use of S3 registration ... OK * checking dependencies in R code ... OK * checking S3 generic/method consistency ... OK * checking replacement functions ... OK * checking foreign function calls ... OK * checking R code for possible problems ... [5s] OK * checking Rd files ... [1s] OK * checking Rd metadata ... OK * checking Rd line widths ... OK * checking Rd cross-references ... OK * checking for missing documentation entries ... OK * checking for code/documentation mismatches ... OK * checking Rd \\usage sections ... OK * checking Rd contents ... OK * checking for unstated dependencies in examples ... OK * checking installed files from 'inst/doc' ... OK * checking files in 'vignettes' ... OK * checking examples ... NONE * checking for unstated dependencies in 'tests' ... OK * checking tests ... [4s] OK   Running 'testthat.R' [4s] * checking for unstated dependencies in vignettes ... OK * checking package vignettes in 'inst/doc' ... OK * checking re-building of vignette outputs ... [16s] OK * checking PDF version of manual ... [20s] OK * checking HTML version of manual ... [1s] OK * checking for detritus in the temp directory ... OK * DONE Status: 1 NOTE * using log directory ‘/srv/hornik/tmp/CRAN/collatz.Rcheck’ * using R Under development (unstable) (2022-08-25 r82762) * using platform: x86_64-pc-linux-gnu (64-bit) * using session charset: UTF-8 * checking for file ‘collatz/DESCRIPTION’ ... OK * this is package ‘collatz’ version ‘1.0.0’ * package encoding: UTF-8 * checking CRAN incoming feasibility ... [3s/4s] NOTE Maintainer: ‘Nathan Levett <nathan.a.z.levett@gmail.com>’  New submission  Possibly misspelled words in DESCRIPTION:   Collatz (5:33, 6:68)  Found the following (possibly) invalid URLs:   URL: http://localhost:4321     From: README.md     Status: Error     Message: Failed to connect to localhost port 4321 after 0 ms: Connection refused   URL: https://skenvy.github.io/Collatz/R (moved to https://skenvy.github.io/Collatz/R/)     From: DESCRIPTION     Status: 301     Message: Moved Permanently   URL: https://skenvy.github.io/Collatz/R/pdf (moved to https://skenvy.github.io/Collatz/R/pdf/)     From: DESCRIPTION     Status: 301     Message: Moved Permanently * checking package namespace information ... OK * checking package dependencies ... OK * checking if this is a source package ... OK * checking if there is a namespace ... OK * checking for executable files ... OK * checking for hidden files and directories ... OK * checking for portable file names ... OK * checking for sufficient/correct file permissions ... OK * checking whether package ‘collatz’ can be installed ... [1s/1s] OK * checking package directory ... OK * checking for future file timestamps ... OK * checking ‘build’ directory ... OK * checking DESCRIPTION meta-information ... OK * checking top-level files ... OK * checking for left-over files ... OK * checking index information ... OK * checking package subdirectories ... OK * checking R files for non-ASCII characters ... OK * checking R files for syntax errors ... OK * checking whether the package can be loaded ... [0s/0s] OK * checking whether the package can be loaded with stated dependencies ... [0s/0s] OK * checking whether the package can be unloaded cleanly ... [0s/0s] OK * checking whether the namespace can be loaded with stated dependencies ... [0s/0s] OK * checking whether the namespace can be unloaded cleanly ... [0s/0s] OK * checking loading without being on the library search path ... [0s/0s] OK * checking use of S3 registration ... OK * checking dependencies in R code ... OK * checking S3 generic/method consistency ... OK * checking replacement functions ... OK * checking foreign function calls ... OK * checking R code for possible problems ... [2s/2s] OK * checking Rd files ... [0s/0s] OK * checking Rd metadata ... OK * checking Rd line widths ... OK * checking Rd cross-references ... OK * checking for missing documentation entries ... OK * checking for code/documentation mismatches ... OK * checking Rd \\usage sections ... OK * checking Rd contents ... OK * checking for unstated dependencies in examples ... OK * checking installed files from ‘inst/doc’ ... OK * checking files in ‘vignettes’ ... OK * checking examples ... NONE * checking for unstated dependencies in ‘tests’ ... OK * checking tests ... [1s/1s] OK   Running ‘testthat.R’ [1s/1s] * checking for unstated dependencies in vignettes ... OK * checking package vignettes in ‘inst/doc’ ... OK * checking re-building of vignette outputs ... [3s/3s] OK * checking PDF version of manual ... [2s/2s] OK * checking HTML version of manual ... [0s/0s] OK * checking for non-standard things in the check directory ... OK * checking for detritus in the temp directory ... OK * DONE Status: 1 NOTE git tag -d R-v1.0.0 git push --delete origin R-v1.0.0 git checkout gh-pages git reset HEAD~ --hard git push --force git checkout gh-pages-R git reset HEAD~ --hard git push --force"},{"path":"https://skenvy.github.io/Collatz/R/index.html","id":"collatz-r-️","dir":"","previous_headings":"","what":"Functions Related to the Collatz/Syracuse/3n+1 Problem","title":"Functions Related to the Collatz/Syracuse/3n+1 Problem","text":"Functions related Collatz/Syracuse/3N+1 problem, implemented R.","code":""},{"path":"https://skenvy.github.io/Collatz/R/index.html","id":"getting-started","dir":"","previous_headings":"","what":"Getting Started","title":"Functions Related to the Collatz/Syracuse/3n+1 Problem","text":"install latest github, devtools; install specific GitHub release’s tarball (R-v* tagged releases include collatz_*.tar.gz, simply copy change example version 0.1.0 whichever version want); install latest CRAN (relevancy pending submission CRAN ongoing stability);","code":"Rscript -e 'devtools::install_github(\"Skenvy/Collatz\", subdir=\"R\")' VER=1.0.0 && curl -L https://github.com/Skenvy/Collatz/releases/download/R-v${VER}/collatz_${VER}.tar.gz > collatz_${VER}.tar.gz && Rscript -e \"install.packages('collatz_${VER}.tar.gz', repos=NULL, type='source')\" Rscript -e 'install.packages(\"collatz\")'"},{"path":"https://skenvy.github.io/Collatz/R/index.html","id":"usage","dir":"","previous_headings":"","what":"Usage","title":"Functions Related to the Collatz/Syracuse/3n+1 Problem","text":"Provides basic functionality interact Collatz conjecture. parameterisation uses (P,,b) notation Conway’s generalisations. Besides function reverse function, also functionality retrieve hailstone sequence, “stopping time”/“total stopping time”, tree-graph. restriction placed parameters P can’t 0.","code":""},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":"https://skenvy.github.io/Collatz/R/index.html","id":"the-first-time-setup","dir":"","previous_headings":"Developing","what":"The first time setup","title":"Functions Related to the Collatz/Syracuse/3n+1 Problem","text":"debian system, required setup.","code":"git clone https://github.com/Skenvy/Collatz.git && cd Collatz/R && sudo make setup_debian && make setup && make setup_libraries"},{"path":"https://skenvy.github.io/Collatz/R/index.html","id":"iterative-development","dir":"","previous_headings":"Developing","what":"Iterative development","title":"Functions Related to the Collatz/Syracuse/3n+1 Problem","text":"make docs_local start local server browse docs generated roxygen2, pkgdown, covr, Rd2pdf TinyTex, served servr. make full_test verify integrity package passing tests, passing tests lower threshold package structure.","code":""},{"path":"https://skenvy.github.io/Collatz/R/reference/assert_sane_parameterication.html","id":null,"dir":"Reference","previous_headings":"","what":"Sane Parameter Check — assert_sane_parameterication","title":"Sane Parameter Check — assert_sane_parameterication","text":"Handles sanity check parameterisation (P,,b)","code":""},{"path":"https://skenvy.github.io/Collatz/R/reference/assert_sane_parameterication.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Sane Parameter Check — assert_sane_parameterication","text":"","code":"assert_sane_parameterication(P, a, b)"},{"path":"https://skenvy.github.io/Collatz/R/reference/assert_sane_parameterication.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Sane Parameter Check — assert_sane_parameterication","text":"P Modulus used devide n, iff n equivalent (0 mod P). Factor multiply n. b Value add scaled value n.","code":""},{"path":"https://skenvy.github.io/Collatz/R/reference/assert_sane_parameterication.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Sane Parameter Check — assert_sane_parameterication","text":"Required function reverse function, assert sane parameters, otherwise force stop execution.","code":""},{"path":"https://skenvy.github.io/Collatz/R/reference/collatz.html","id":null,"dir":"Reference","previous_headings":"","what":"Collatz — collatz","title":"Collatz — collatz","text":"Functions related Collatz/Syracuse/3N+1 problem.","code":""},{"path":"https://skenvy.github.io/Collatz/R/reference/collatz.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Collatz — collatz","text":"Provides basic functionality interact Collatz conjecture. parameterisation uses (P,,b) notation Conway's generalisations. Besides function reverse function, also functionality retrieve hailstone sequence, \"stopping time\"/\"total stopping time\", tree-graph. restriction placed parameters P 0.","code":""},{"path":"https://skenvy.github.io/Collatz/R/reference/collatz_function.html","id":null,"dir":"Reference","previous_headings":"","what":"The Collatz function — collatz_function","title":"The Collatz function — collatz_function","text":"Returns output single application Collatz-esque function.","code":""},{"path":"https://skenvy.github.io/Collatz/R/reference/collatz_function.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"The Collatz function — collatz_function","text":"","code":"collatz_function(n, P = 2, a = 3, b = 1)"},{"path":"https://skenvy.github.io/Collatz/R/reference/collatz_function.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"The Collatz function — collatz_function","text":"n (numeric|bigz) value perform Collatz-esque function P (numeric|bigz): Modulus used divide n, iff n equivalent (0 mod P). Default 2. (numeric|bigz) Factor multiply n. Default 3. b (numeric|bigz) Value add scaled value n. Default 1.","code":""},{"path":"https://skenvy.github.io/Collatz/R/reference/collatz_function.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"The Collatz function — collatz_function","text":"numeric, either -built bigz gmp library.","code":""},{"path":"https://skenvy.github.io/Collatz/R/reference/collatz_function.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"The Collatz function — collatz_function","text":"function compute return result applying one iteration parameterised Collatz-esque function. Although operate integer inputs, overflow safety, provide gmp Big Integer ('bigz').","code":""},{"path":"https://skenvy.github.io/Collatz/R/reference/collatz_function.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"The Collatz function — collatz_function","text":"","code":"# Returns the output of a single application of a Collatz-esque function. # Without `gmp` or parameterisation, we can try something simple like collatz_function(5) #> [1] 16 collatz_function(16) #> [1] 8 # If we want change the default parameterisation we can; collatz_function(4, 5, 2, 3) #> [1] 11 # Or if we only want to change one of them collatz_function(3, a=-2) #> [1] -5 # All the above work fine, but the function doesn't offer protection against # overflowing integers by default. To venture into the world of arbitrary # integer inputs we can use an `as.bigz` from `gmp`. Compare the two; collatz_function(99999999999999999999) #> Warning: probable complete loss of accuracy in modulus #> [1] 5e+19 collatz_function(as.bigz(\"99999999999999999999\")) #> Big Integer ('bigz') : #> [1] 299999999999999999998"},{"path":"https://skenvy.github.io/Collatz/R/reference/hailstone_sequence.html","id":null,"dir":"Reference","previous_headings":"","what":"Hailstone Sequencer — hailstone_sequence","title":"Hailstone Sequencer — hailstone_sequence","text":"Calculates values hailstone sequence, initial value.","code":""},{"path":"https://skenvy.github.io/Collatz/R/reference/hailstone_sequence.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Hailstone Sequencer — hailstone_sequence","text":"","code":"hailstone_sequence(   initial_value,   P = 2,   a = 3,   b = 1,   max_total_stopping_time = 1000,   total_stopping_time = TRUE,   verbose = TRUE )"},{"path":"https://skenvy.github.io/Collatz/R/reference/hailstone_sequence.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Hailstone Sequencer — hailstone_sequence","text":"initial_value (numeric|bigz) value begin hailstone sequence . P (numeric|bigz): Modulus used divide n, iff n equivalent (0 mod P). Default 2. (numeric|bigz) Factor multiply n. Default 3. b (numeric|bigz) Value add scaled value n. Default 1. max_total_stopping_time (int) Maximum amount times iterate function, 1 reached. Default 1000. total_stopping_time (bool) Whether execute \"total\" stopping time (number iterations obtain 1) rather regular stopping time (number iterations reach value less initial value). Default TRUE. verbose (bool) set verbose, hailstone sequence include control string sequences provide information sequence terminated, whether reaching stopping time entering cycle. Default TRUE.","code":""},{"path":"https://skenvy.github.io/Collatz/R/reference/hailstone_sequence.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Hailstone Sequencer — hailstone_sequence","text":"keyed list consisting $values list numeric | bigz along $terminalCondition $terminalStatus","code":""},{"path":"https://skenvy.github.io/Collatz/R/reference/hailstone_sequence.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Hailstone Sequencer — hailstone_sequence","text":"Returns list successive values obtained iterating Collatz-esque function, either 1 reached, total amount iterations exceeds max_total_stopping_time, unless total_stopping_time FALSE, terminate hailstone \"stopping time\" value, .e. first value less initial value. sequence capability determine encountered cycle, cycle \"1\" wont attempted reported part cycle, regardless default custom parameterisation, \"1\" considered \"total stop\".","code":""},{"path":"https://skenvy.github.io/Collatz/R/reference/hailstone_sequence.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Hailstone Sequencer — hailstone_sequence","text":"","code":"# Compute a hailstone sequence, which defaults to the total stopping time; hailstone_sequence(5) #> $values #> $values[[1]] #> [1] 5 #>  #> $values[[2]] #> [1] 16 #>  #> $values[[3]] #> [1] 8 #>  #> $values[[4]] #> [1] 4 #>  #> $values[[5]] #> [1] 2 #>  #> $values[[6]] #> [1] 1 #>  #>  #> $terminalCondition #> [1] \"TOTAL_STOPPING_TIME\" #>  #> $terminalStatus #> [1] 5 #>  # Or only compute down to the regular stopping time; hailstone_sequence(5, total_stopping_time=FALSE) #> $values #> $values[[1]] #> [1] 5 #>  #> $values[[2]] #> [1] 16 #>  #> $values[[3]] #> [1] 8 #>  #> $values[[4]] #> [1] 4 #>  #>  #> $terminalCondition #> [1] \"STOPPING_TIME\" #>  #> $terminalStatus #> [1] 3 #>  # Remove verbose messaging; hailstone_sequence(5, verbose=FALSE) #> [[1]] #> [1] 5 #>  #> [[2]] #> [1] 16 #>  #> [[3]] #> [1] 8 #>  #> [[4]] #> [1] 4 #>  #> [[5]] #> [1] 2 #>  #> [[6]] #> [1] 1 #>  # It will also stop on finding a cycle; hailstone_sequence(-56) #> $values #> $values[[1]] #> [1] -56 #>  #> $values[[2]] #> [1] -28 #>  #> $values[[3]] #> [1] -14 #>  #> $values[[4]] #> [1] -7 #>  #> $values[[5]] #> [1] -20 #>  #> $values[[6]] #> [1] -10 #>  #> $values[[7]] #> [1] -5 #>  #> $values[[8]] #> [1] -14 #>  #>  #> $terminalCondition #> [1] \"CYCLE_LENGTH\" #>  #> $terminalStatus #> [1] 5 #>  # And can be parameterised; hailstone_sequence(3, -1, 3, 1) #> $values #> $values[[1]] #> [1] 3 #>  #> $values[[2]] #> [1] -3 #>  #> $values[[3]] #> [1] 3 #>  #>  #> $terminalCondition #> [1] \"CYCLE_LENGTH\" #>  #> $terminalStatus #> [1] 2 #>  # The hailstone sequence can run on `bigz`; hailstone_sequence(27+as.bigz(\"576460752303423488\")) #> $values #> $values[[1]] #> Big Integer ('bigz') : #> [1] 576460752303423515 #>  #> $values[[2]] #> Big Integer ('bigz') : #> [1] 1729382256910270546 #>  #> $values[[3]] #> Big Integer ('bigz') : #> [1] 864691128455135273 #>  #> $values[[4]] #> Big Integer ('bigz') : #> [1] 2594073385365405820 #>  #> $values[[5]] #> Big Integer ('bigz') : #> [1] 1297036692682702910 #>  #> $values[[6]] #> Big Integer ('bigz') : #> [1] 648518346341351455 #>  #> $values[[7]] #> Big Integer ('bigz') : #> [1] 1945555039024054366 #>  #> $values[[8]] #> Big Integer ('bigz') : #> [1] 972777519512027183 #>  #> $values[[9]] #> Big Integer ('bigz') : #> [1] 2918332558536081550 #>  #> $values[[10]] #> Big Integer ('bigz') : #> [1] 1459166279268040775 #>  #> $values[[11]] #> Big Integer ('bigz') : #> [1] 4377498837804122326 #>  #> $values[[12]] #> Big Integer ('bigz') : #> [1] 2188749418902061163 #>  #> $values[[13]] #> Big Integer ('bigz') : #> [1] 6566248256706183490 #>  #> $values[[14]] #> Big Integer ('bigz') : #> [1] 3283124128353091745 #>  #> $values[[15]] #> Big Integer ('bigz') : #> [1] 9849372385059275236 #>  #> $values[[16]] #> Big Integer ('bigz') : #> [1] 4924686192529637618 #>  #> $values[[17]] #> Big Integer ('bigz') : #> [1] 2462343096264818809 #>  #> $values[[18]] #> Big Integer ('bigz') : #> [1] 7387029288794456428 #>  #> $values[[19]] #> Big Integer ('bigz') : #> [1] 3693514644397228214 #>  #> $values[[20]] #> Big Integer ('bigz') : #> [1] 1846757322198614107 #>  #> $values[[21]] #> Big Integer ('bigz') : #> [1] 5540271966595842322 #>  #> $values[[22]] #> Big Integer ('bigz') : #> [1] 2770135983297921161 #>  #> $values[[23]] #> Big Integer ('bigz') : #> [1] 8310407949893763484 #>  #> $values[[24]] #> Big Integer ('bigz') : #> [1] 4155203974946881742 #>  #> $values[[25]] #> Big Integer ('bigz') : #> [1] 2077601987473440871 #>  #> $values[[26]] #> Big Integer ('bigz') : #> [1] 6232805962420322614 #>  #> $values[[27]] #> Big Integer ('bigz') : #> [1] 3116402981210161307 #>  #> $values[[28]] #> Big Integer ('bigz') : #> [1] 9349208943630483922 #>  #> $values[[29]] #> Big Integer ('bigz') : #> [1] 4674604471815241961 #>  #> $values[[30]] #> Big Integer ('bigz') : #> [1] 14023813415445725884 #>  #> $values[[31]] #> Big Integer ('bigz') : #> [1] 7011906707722862942 #>  #> $values[[32]] #> Big Integer ('bigz') : #> [1] 3505953353861431471 #>  #> $values[[33]] #> Big Integer ('bigz') : #> [1] 10517860061584294414 #>  #> $values[[34]] #> Big Integer ('bigz') : #> [1] 5258930030792147207 #>  #> $values[[35]] #> Big Integer ('bigz') : #> [1] 15776790092376441622 #>  #> $values[[36]] #> Big Integer ('bigz') : #> [1] 7888395046188220811 #>  #> $values[[37]] #> Big Integer ('bigz') : #> [1] 23665185138564662434 #>  #> $values[[38]] #> Big Integer ('bigz') : #> [1] 11832592569282331217 #>  #> $values[[39]] #> Big Integer ('bigz') : #> [1] 35497777707846993652 #>  #> $values[[40]] #> Big Integer ('bigz') : #> [1] 17748888853923496826 #>  #> $values[[41]] #> Big Integer ('bigz') : #> [1] 8874444426961748413 #>  #> $values[[42]] #> Big Integer ('bigz') : #> [1] 26623333280885245240 #>  #> $values[[43]] #> Big Integer ('bigz') : #> [1] 13311666640442622620 #>  #> $values[[44]] #> Big Integer ('bigz') : #> [1] 6655833320221311310 #>  #> $values[[45]] #> Big Integer ('bigz') : #> [1] 3327916660110655655 #>  #> $values[[46]] #> Big Integer ('bigz') : #> [1] 9983749980331966966 #>  #> $values[[47]] #> Big Integer ('bigz') : #> [1] 4991874990165983483 #>  #> $values[[48]] #> Big Integer ('bigz') : #> [1] 14975624970497950450 #>  #> $values[[49]] #> Big Integer ('bigz') : #> [1] 7487812485248975225 #>  #> $values[[50]] #> Big Integer ('bigz') : #> [1] 22463437455746925676 #>  #> $values[[51]] #> Big Integer ('bigz') : #> [1] 11231718727873462838 #>  #> $values[[52]] #> Big Integer ('bigz') : #> [1] 5615859363936731419 #>  #> $values[[53]] #> Big Integer ('bigz') : #> [1] 16847578091810194258 #>  #> $values[[54]] #> Big Integer ('bigz') : #> [1] 8423789045905097129 #>  #> $values[[55]] #> Big Integer ('bigz') : #> [1] 25271367137715291388 #>  #> $values[[56]] #> Big Integer ('bigz') : #> [1] 12635683568857645694 #>  #> $values[[57]] #> Big Integer ('bigz') : #> [1] 6317841784428822847 #>  #> $values[[58]] #> Big Integer ('bigz') : #> [1] 18953525353286468542 #>  #> $values[[59]] #> Big Integer ('bigz') : #> [1] 9476762676643234271 #>  #> $values[[60]] #> Big Integer ('bigz') : #> [1] 28430288029929702814 #>  #> $values[[61]] #> Big Integer ('bigz') : #> [1] 14215144014964851407 #>  #> $values[[62]] #> Big Integer ('bigz') : #> [1] 42645432044894554222 #>  #> $values[[63]] #> Big Integer ('bigz') : #> [1] 21322716022447277111 #>  #> $values[[64]] #> Big Integer ('bigz') : #> [1] 63968148067341831334 #>  #> $values[[65]] #> Big Integer ('bigz') : #> [1] 31984074033670915667 #>  #> $values[[66]] #> Big Integer ('bigz') : #> [1] 95952222101012747002 #>  #> $values[[67]] #> Big Integer ('bigz') : #> [1] 47976111050506373501 #>  #> $values[[68]] #> Big Integer ('bigz') : #> [1] 143928333151519120504 #>  #> $values[[69]] #> Big Integer ('bigz') : #> [1] 71964166575759560252 #>  #> $values[[70]] #> Big Integer ('bigz') : #> [1] 35982083287879780126 #>  #> $values[[71]] #> Big Integer ('bigz') : #> [1] 17991041643939890063 #>  #> $values[[72]] #> Big Integer ('bigz') : #> [1] 53973124931819670190 #>  #> $values[[73]] #> Big Integer ('bigz') : #> [1] 26986562465909835095 #>  #> $values[[74]] #> Big Integer ('bigz') : #> [1] 80959687397729505286 #>  #> $values[[75]] #> Big Integer ('bigz') : #> [1] 40479843698864752643 #>  #> $values[[76]] #> Big Integer ('bigz') : #> [1] 121439531096594257930 #>  #> $values[[77]] #> Big Integer ('bigz') : #> [1] 60719765548297128965 #>  #> $values[[78]] #> Big Integer ('bigz') : #> [1] 182159296644891386896 #>  #> $values[[79]] #> Big Integer ('bigz') : #> [1] 91079648322445693448 #>  #> $values[[80]] #> Big Integer ('bigz') : #> [1] 45539824161222846724 #>  #> $values[[81]] #> Big Integer ('bigz') : #> [1] 22769912080611423362 #>  #> $values[[82]] #> Big Integer ('bigz') : #> [1] 11384956040305711681 #>  #> $values[[83]] #> Big Integer ('bigz') : #> [1] 34154868120917135044 #>  #> $values[[84]] #> Big Integer ('bigz') : #> [1] 17077434060458567522 #>  #> $values[[85]] #> Big Integer ('bigz') : #> [1] 8538717030229283761 #>  #> $values[[86]] #> Big Integer ('bigz') : #> [1] 25616151090687851284 #>  #> $values[[87]] #> Big Integer ('bigz') : #> [1] 12808075545343925642 #>  #> $values[[88]] #> Big Integer ('bigz') : #> [1] 6404037772671962821 #>  #> $values[[89]] #> Big Integer ('bigz') : #> [1] 19212113318015888464 #>  #> $values[[90]] #> Big Integer ('bigz') : #> [1] 9606056659007944232 #>  #> $values[[91]] #> Big Integer ('bigz') : #> [1] 4803028329503972116 #>  #> $values[[92]] #> Big Integer ('bigz') : #> [1] 2401514164751986058 #>  #> $values[[93]] #> Big Integer ('bigz') : #> [1] 1200757082375993029 #>  #> $values[[94]] #> Big Integer ('bigz') : #> [1] 3602271247127979088 #>  #> $values[[95]] #> Big Integer ('bigz') : #> [1] 1801135623563989544 #>  #> $values[[96]] #> Big Integer ('bigz') : #> [1] 900567811781994772 #>  #> $values[[97]] #> Big Integer ('bigz') : #> [1] 450283905890997386 #>  #> $values[[98]] #> Big Integer ('bigz') : #> [1] 225141952945498693 #>  #> $values[[99]] #> Big Integer ('bigz') : #> [1] 675425858836496080 #>  #> $values[[100]] #> Big Integer ('bigz') : #> [1] 337712929418248040 #>  #> $values[[101]] #> Big Integer ('bigz') : #> [1] 168856464709124020 #>  #> $values[[102]] #> Big Integer ('bigz') : #> [1] 84428232354562010 #>  #> $values[[103]] #> Big Integer ('bigz') : #> [1] 42214116177281005 #>  #> $values[[104]] #> Big Integer ('bigz') : #> [1] 126642348531843016 #>  #> $values[[105]] #> Big Integer ('bigz') : #> [1] 63321174265921508 #>  #> $values[[106]] #> Big Integer ('bigz') : #> [1] 31660587132960754 #>  #> $values[[107]] #> Big Integer ('bigz') : #> [1] 15830293566480377 #>  #> $values[[108]] #> Big Integer ('bigz') : #> [1] 47490880699441132 #>  #> $values[[109]] #> Big Integer ('bigz') : #> [1] 23745440349720566 #>  #> $values[[110]] #> Big Integer ('bigz') : #> [1] 11872720174860283 #>  #> $values[[111]] #> Big Integer ('bigz') : #> [1] 35618160524580850 #>  #> $values[[112]] #> Big Integer ('bigz') : #> [1] 17809080262290425 #>  #> $values[[113]] #> Big Integer ('bigz') : #> [1] 53427240786871276 #>  #> $values[[114]] #> Big Integer ('bigz') : #> [1] 26713620393435638 #>  #> $values[[115]] #> Big Integer ('bigz') : #> [1] 13356810196717819 #>  #> $values[[116]] #> Big Integer ('bigz') : #> [1] 40070430590153458 #>  #> $values[[117]] #> Big Integer ('bigz') : #> [1] 20035215295076729 #>  #> $values[[118]] #> Big Integer ('bigz') : #> [1] 60105645885230188 #>  #> $values[[119]] #> Big Integer ('bigz') : #> [1] 30052822942615094 #>  #> $values[[120]] #> Big Integer ('bigz') : #> [1] 15026411471307547 #>  #> $values[[121]] #> Big Integer ('bigz') : #> [1] 45079234413922642 #>  #> $values[[122]] #> Big Integer ('bigz') : #> [1] 22539617206961321 #>  #> $values[[123]] #> Big Integer ('bigz') : #> [1] 67618851620883964 #>  #> $values[[124]] #> Big Integer ('bigz') : #> [1] 33809425810441982 #>  #> $values[[125]] #> Big Integer ('bigz') : #> [1] 16904712905220991 #>  #> $values[[126]] #> Big Integer ('bigz') : #> [1] 50714138715662974 #>  #> $values[[127]] #> Big Integer ('bigz') : #> [1] 25357069357831487 #>  #> $values[[128]] #> Big Integer ('bigz') : #> [1] 76071208073494462 #>  #> $values[[129]] #> Big Integer ('bigz') : #> [1] 38035604036747231 #>  #> $values[[130]] #> Big Integer ('bigz') : #> [1] 114106812110241694 #>  #> $values[[131]] #> Big Integer ('bigz') : #> [1] 57053406055120847 #>  #> $values[[132]] #> Big Integer ('bigz') : #> [1] 171160218165362542 #>  #> $values[[133]] #> Big Integer ('bigz') : #> [1] 85580109082681271 #>  #> $values[[134]] #> Big Integer ('bigz') : #> [1] 256740327248043814 #>  #> $values[[135]] #> Big Integer ('bigz') : #> [1] 128370163624021907 #>  #> $values[[136]] #> Big Integer ('bigz') : #> [1] 385110490872065722 #>  #> $values[[137]] #> Big Integer ('bigz') : #> [1] 192555245436032861 #>  #> $values[[138]] #> Big Integer ('bigz') : #> [1] 577665736308098584 #>  #> $values[[139]] #> Big Integer ('bigz') : #> [1] 288832868154049292 #>  #> $values[[140]] #> Big Integer ('bigz') : #> [1] 144416434077024646 #>  #> $values[[141]] #> Big Integer ('bigz') : #> [1] 72208217038512323 #>  #> $values[[142]] #> Big Integer ('bigz') : #> [1] 216624651115536970 #>  #> $values[[143]] #> Big Integer ('bigz') : #> [1] 108312325557768485 #>  #> $values[[144]] #> Big Integer ('bigz') : #> [1] 324936976673305456 #>  #> $values[[145]] #> Big Integer ('bigz') : #> [1] 162468488336652728 #>  #> $values[[146]] #> Big Integer ('bigz') : #> [1] 81234244168326364 #>  #> $values[[147]] #> Big Integer ('bigz') : #> [1] 40617122084163182 #>  #> $values[[148]] #> Big Integer ('bigz') : #> [1] 20308561042081591 #>  #> $values[[149]] #> Big Integer ('bigz') : #> [1] 60925683126244774 #>  #> $values[[150]] #> Big Integer ('bigz') : #> [1] 30462841563122387 #>  #> $values[[151]] #> Big Integer ('bigz') : #> [1] 91388524689367162 #>  #> $values[[152]] #> Big Integer ('bigz') : #> [1] 45694262344683581 #>  #> $values[[153]] #> Big Integer ('bigz') : #> [1] 137082787034050744 #>  #> $values[[154]] #> Big Integer ('bigz') : #> [1] 68541393517025372 #>  #> $values[[155]] #> Big Integer ('bigz') : #> [1] 34270696758512686 #>  #> $values[[156]] #> Big Integer ('bigz') : #> [1] 17135348379256343 #>  #> $values[[157]] #> Big Integer ('bigz') : #> [1] 51406045137769030 #>  #> $values[[158]] #> Big Integer ('bigz') : #> [1] 25703022568884515 #>  #> $values[[159]] #> Big Integer ('bigz') : #> [1] 77109067706653546 #>  #> $values[[160]] #> Big Integer ('bigz') : #> [1] 38554533853326773 #>  #> $values[[161]] #> Big Integer ('bigz') : #> [1] 115663601559980320 #>  #> $values[[162]] #> Big Integer ('bigz') : #> [1] 57831800779990160 #>  #> $values[[163]] #> Big Integer ('bigz') : #> [1] 28915900389995080 #>  #> $values[[164]] #> Big Integer ('bigz') : #> [1] 14457950194997540 #>  #> $values[[165]] #> Big Integer ('bigz') : #> [1] 7228975097498770 #>  #> $values[[166]] #> Big Integer ('bigz') : #> [1] 3614487548749385 #>  #> $values[[167]] #> Big Integer ('bigz') : #> [1] 10843462646248156 #>  #> $values[[168]] #> Big Integer ('bigz') : #> [1] 5421731323124078 #>  #> $values[[169]] #> Big Integer ('bigz') : #> [1] 2710865661562039 #>  #> $values[[170]] #> Big Integer ('bigz') : #> [1] 8132596984686118 #>  #> $values[[171]] #> Big Integer ('bigz') : #> [1] 4066298492343059 #>  #> $values[[172]] #> Big Integer ('bigz') : #> [1] 12198895477029178 #>  #> $values[[173]] #> Big Integer ('bigz') : #> [1] 6099447738514589 #>  #> $values[[174]] #> Big Integer ('bigz') : #> [1] 18298343215543768 #>  #> $values[[175]] #> Big Integer ('bigz') : #> [1] 9149171607771884 #>  #> $values[[176]] #> Big Integer ('bigz') : #> [1] 4574585803885942 #>  #> $values[[177]] #> Big Integer ('bigz') : #> [1] 2287292901942971 #>  #> $values[[178]] #> Big Integer ('bigz') : #> [1] 6861878705828914 #>  #> $values[[179]] #> Big Integer ('bigz') : #> [1] 3430939352914457 #>  #> $values[[180]] #> Big Integer ('bigz') : #> [1] 10292818058743372 #>  #> $values[[181]] #> Big Integer ('bigz') : #> [1] 5146409029371686 #>  #> $values[[182]] #> Big Integer ('bigz') : #> [1] 2573204514685843 #>  #> $values[[183]] #> Big Integer ('bigz') : #> [1] 7719613544057530 #>  #> $values[[184]] #> Big Integer ('bigz') : #> [1] 3859806772028765 #>  #> $values[[185]] #> Big Integer ('bigz') : #> [1] 11579420316086296 #>  #> $values[[186]] #> Big Integer ('bigz') : #> [1] 5789710158043148 #>  #> $values[[187]] #> Big Integer ('bigz') : #> [1] 2894855079021574 #>  #> $values[[188]] #> Big Integer ('bigz') : #> [1] 1447427539510787 #>  #> $values[[189]] #> Big Integer ('bigz') : #> [1] 4342282618532362 #>  #> $values[[190]] #> Big Integer ('bigz') : #> [1] 2171141309266181 #>  #> $values[[191]] #> Big Integer ('bigz') : #> [1] 6513423927798544 #>  #> $values[[192]] #> Big Integer ('bigz') : #> [1] 3256711963899272 #>  #> $values[[193]] #> Big Integer ('bigz') : #> [1] 1628355981949636 #>  #> $values[[194]] #> Big Integer ('bigz') : #> [1] 814177990974818 #>  #> $values[[195]] #> Big Integer ('bigz') : #> [1] 407088995487409 #>  #> $values[[196]] #> Big Integer ('bigz') : #> [1] 1221266986462228 #>  #> $values[[197]] #> Big Integer ('bigz') : #> [1] 610633493231114 #>  #> $values[[198]] #> Big Integer ('bigz') : #> [1] 305316746615557 #>  #> $values[[199]] #> Big Integer ('bigz') : #> [1] 915950239846672 #>  #> $values[[200]] #> Big Integer ('bigz') : #> [1] 457975119923336 #>  #> $values[[201]] #> Big Integer ('bigz') : #> [1] 228987559961668 #>  #> $values[[202]] #> Big Integer ('bigz') : #> [1] 114493779980834 #>  #> $values[[203]] #> Big Integer ('bigz') : #> [1] 57246889990417 #>  #> $values[[204]] #> Big Integer ('bigz') : #> [1] 171740669971252 #>  #> $values[[205]] #> Big Integer ('bigz') : #> [1] 85870334985626 #>  #> $values[[206]] #> Big Integer ('bigz') : #> [1] 42935167492813 #>  #> $values[[207]] #> Big Integer ('bigz') : #> [1] 128805502478440 #>  #> $values[[208]] #> Big Integer ('bigz') : #> [1] 64402751239220 #>  #> $values[[209]] #> Big Integer ('bigz') : #> [1] 32201375619610 #>  #> $values[[210]] #> Big Integer ('bigz') : #> [1] 16100687809805 #>  #> $values[[211]] #> Big Integer ('bigz') : #> [1] 48302063429416 #>  #> $values[[212]] #> Big Integer ('bigz') : #> [1] 24151031714708 #>  #> $values[[213]] #> Big Integer ('bigz') : #> [1] 12075515857354 #>  #> $values[[214]] #> Big Integer ('bigz') : #> [1] 6037757928677 #>  #> $values[[215]] #> Big Integer ('bigz') : #> [1] 18113273786032 #>  #> $values[[216]] #> Big Integer ('bigz') : #> [1] 9056636893016 #>  #> $values[[217]] #> Big Integer ('bigz') : #> [1] 4528318446508 #>  #> $values[[218]] #> Big Integer ('bigz') : #> [1] 2264159223254 #>  #> $values[[219]] #> Big Integer ('bigz') : #> [1] 1132079611627 #>  #> $values[[220]] #> Big Integer ('bigz') : #> [1] 3396238834882 #>  #> $values[[221]] #> Big Integer ('bigz') : #> [1] 1698119417441 #>  #> $values[[222]] #> Big Integer ('bigz') : #> [1] 5094358252324 #>  #> $values[[223]] #> Big Integer ('bigz') : #> [1] 2547179126162 #>  #> $values[[224]] #> Big Integer ('bigz') : #> [1] 1273589563081 #>  #> $values[[225]] #> Big Integer ('bigz') : #> [1] 3820768689244 #>  #> $values[[226]] #> Big Integer ('bigz') : #> [1] 1910384344622 #>  #> $values[[227]] #> Big Integer ('bigz') : #> [1] 955192172311 #>  #> $values[[228]] #> Big Integer ('bigz') : #> [1] 2865576516934 #>  #> $values[[229]] #> Big Integer ('bigz') : #> [1] 1432788258467 #>  #> $values[[230]] #> Big Integer ('bigz') : #> [1] 4298364775402 #>  #> $values[[231]] #> Big Integer ('bigz') : #> [1] 2149182387701 #>  #> $values[[232]] #> Big Integer ('bigz') : #> [1] 6447547163104 #>  #> $values[[233]] #> Big Integer ('bigz') : #> [1] 3223773581552 #>  #> $values[[234]] #> Big Integer ('bigz') : #> [1] 1611886790776 #>  #> $values[[235]] #> Big Integer ('bigz') : #> [1] 805943395388 #>  #> $values[[236]] #> Big Integer ('bigz') : #> [1] 402971697694 #>  #> $values[[237]] #> Big Integer ('bigz') : #> [1] 201485848847 #>  #> $values[[238]] #> Big Integer ('bigz') : #> [1] 604457546542 #>  #> $values[[239]] #> Big Integer ('bigz') : #> [1] 302228773271 #>  #> $values[[240]] #> Big Integer ('bigz') : #> [1] 906686319814 #>  #> $values[[241]] #> Big Integer ('bigz') : #> [1] 453343159907 #>  #> $values[[242]] #> Big Integer ('bigz') : #> [1] 1360029479722 #>  #> $values[[243]] #> Big Integer ('bigz') : #> [1] 680014739861 #>  #> $values[[244]] #> Big Integer ('bigz') : #> [1] 2040044219584 #>  #> $values[[245]] #> Big Integer ('bigz') : #> [1] 1020022109792 #>  #> $values[[246]] #> Big Integer ('bigz') : #> [1] 510011054896 #>  #> $values[[247]] #> Big Integer ('bigz') : #> [1] 255005527448 #>  #> $values[[248]] #> Big Integer ('bigz') : #> [1] 127502763724 #>  #> $values[[249]] #> Big Integer ('bigz') : #> [1] 63751381862 #>  #> $values[[250]] #> Big Integer ('bigz') : #> [1] 31875690931 #>  #> $values[[251]] #> Big Integer ('bigz') : #> [1] 95627072794 #>  #> $values[[252]] #> Big Integer ('bigz') : #> [1] 47813536397 #>  #> $values[[253]] #> Big Integer ('bigz') : #> [1] 143440609192 #>  #> $values[[254]] #> Big Integer ('bigz') : #> [1] 71720304596 #>  #> $values[[255]] #> Big Integer ('bigz') : #> [1] 35860152298 #>  #> $values[[256]] #> Big Integer ('bigz') : #> [1] 17930076149 #>  #> $values[[257]] #> Big Integer ('bigz') : #> [1] 53790228448 #>  #> $values[[258]] #> Big Integer ('bigz') : #> [1] 26895114224 #>  #> $values[[259]] #> Big Integer ('bigz') : #> [1] 13447557112 #>  #> $values[[260]] #> Big Integer ('bigz') : #> [1] 6723778556 #>  #> $values[[261]] #> Big Integer ('bigz') : #> [1] 3361889278 #>  #> $values[[262]] #> Big Integer ('bigz') : #> [1] 1680944639 #>  #> $values[[263]] #> Big Integer ('bigz') : #> [1] 5042833918 #>  #> $values[[264]] #> Big Integer ('bigz') : #> [1] 2521416959 #>  #> $values[[265]] #> Big Integer ('bigz') : #> [1] 7564250878 #>  #> $values[[266]] #> Big Integer ('bigz') : #> [1] 3782125439 #>  #> $values[[267]] #> Big Integer ('bigz') : #> [1] 11346376318 #>  #> $values[[268]] #> Big Integer ('bigz') : #> [1] 5673188159 #>  #> $values[[269]] #> Big Integer ('bigz') : #> [1] 17019564478 #>  #> $values[[270]] #> Big Integer ('bigz') : #> [1] 8509782239 #>  #> $values[[271]] #> Big Integer ('bigz') : #> [1] 25529346718 #>  #> $values[[272]] #> Big Integer ('bigz') : #> [1] 12764673359 #>  #> $values[[273]] #> Big Integer ('bigz') : #> [1] 38294020078 #>  #> $values[[274]] #> Big Integer ('bigz') : #> [1] 19147010039 #>  #> $values[[275]] #> Big Integer ('bigz') : #> [1] 57441030118 #>  #> $values[[276]] #> Big Integer ('bigz') : #> [1] 28720515059 #>  #> $values[[277]] #> Big Integer ('bigz') : #> [1] 86161545178 #>  #> $values[[278]] #> Big Integer ('bigz') : #> [1] 43080772589 #>  #> $values[[279]] #> Big Integer ('bigz') : #> [1] 129242317768 #>  #> $values[[280]] #> Big Integer ('bigz') : #> [1] 64621158884 #>  #> $values[[281]] #> Big Integer ('bigz') : #> [1] 32310579442 #>  #> $values[[282]] #> Big Integer ('bigz') : #> [1] 16155289721 #>  #> $values[[283]] #> Big Integer ('bigz') : #> [1] 48465869164 #>  #> $values[[284]] #> Big Integer ('bigz') : #> [1] 24232934582 #>  #> $values[[285]] #> Big Integer ('bigz') : #> [1] 12116467291 #>  #> $values[[286]] #> Big Integer ('bigz') : #> [1] 36349401874 #>  #> $values[[287]] #> Big Integer ('bigz') : #> [1] 18174700937 #>  #> $values[[288]] #> Big Integer ('bigz') : #> [1] 54524102812 #>  #> $values[[289]] #> Big Integer ('bigz') : #> [1] 27262051406 #>  #> $values[[290]] #> Big Integer ('bigz') : #> [1] 13631025703 #>  #> $values[[291]] #> Big Integer ('bigz') : #> [1] 40893077110 #>  #> $values[[292]] #> Big Integer ('bigz') : #> [1] 20446538555 #>  #> $values[[293]] #> Big Integer ('bigz') : #> [1] 61339615666 #>  #> $values[[294]] #> Big Integer ('bigz') : #> [1] 30669807833 #>  #> $values[[295]] #> Big Integer ('bigz') : #> [1] 92009423500 #>  #> $values[[296]] #> Big Integer ('bigz') : #> [1] 46004711750 #>  #> $values[[297]] #> Big Integer ('bigz') : #> [1] 23002355875 #>  #> $values[[298]] #> Big Integer ('bigz') : #> [1] 69007067626 #>  #> $values[[299]] #> Big Integer ('bigz') : #> [1] 34503533813 #>  #> $values[[300]] #> Big Integer ('bigz') : #> [1] 103510601440 #>  #> $values[[301]] #> Big Integer ('bigz') : #> [1] 51755300720 #>  #> $values[[302]] #> Big Integer ('bigz') : #> [1] 25877650360 #>  #> $values[[303]] #> Big Integer ('bigz') : #> [1] 12938825180 #>  #> $values[[304]] #> Big Integer ('bigz') : #> [1] 6469412590 #>  #> $values[[305]] #> Big Integer ('bigz') : #> [1] 3234706295 #>  #> $values[[306]] #> Big Integer ('bigz') : #> [1] 9704118886 #>  #> $values[[307]] #> Big Integer ('bigz') : #> [1] 4852059443 #>  #> $values[[308]] #> Big Integer ('bigz') : #> [1] 14556178330 #>  #> $values[[309]] #> Big Integer ('bigz') : #> [1] 7278089165 #>  #> $values[[310]] #> Big Integer ('bigz') : #> [1] 21834267496 #>  #> $values[[311]] #> Big Integer ('bigz') : #> [1] 10917133748 #>  #> $values[[312]] #> Big Integer ('bigz') : #> [1] 5458566874 #>  #> $values[[313]] #> Big Integer ('bigz') : #> [1] 2729283437 #>  #> $values[[314]] #> Big Integer ('bigz') : #> [1] 8187850312 #>  #> $values[[315]] #> Big Integer ('bigz') : #> [1] 4093925156 #>  #> $values[[316]] #> Big Integer ('bigz') : #> [1] 2046962578 #>  #> $values[[317]] #> Big Integer ('bigz') : #> [1] 1023481289 #>  #> $values[[318]] #> Big Integer ('bigz') : #> [1] 3070443868 #>  #> $values[[319]] #> Big Integer ('bigz') : #> [1] 1535221934 #>  #> $values[[320]] #> Big Integer ('bigz') : #> [1] 767610967 #>  #> $values[[321]] #> Big Integer ('bigz') : #> [1] 2302832902 #>  #> $values[[322]] #> Big Integer ('bigz') : #> [1] 1151416451 #>  #> $values[[323]] #> Big Integer ('bigz') : #> [1] 3454249354 #>  #> $values[[324]] #> Big Integer ('bigz') : #> [1] 1727124677 #>  #> $values[[325]] #> Big Integer ('bigz') : #> [1] 5181374032 #>  #> $values[[326]] #> Big Integer ('bigz') : #> [1] 2590687016 #>  #> $values[[327]] #> Big Integer ('bigz') : #> [1] 1295343508 #>  #> $values[[328]] #> Big Integer ('bigz') : #> [1] 647671754 #>  #> $values[[329]] #> Big Integer ('bigz') : #> [1] 323835877 #>  #> $values[[330]] #> Big Integer ('bigz') : #> [1] 971507632 #>  #> $values[[331]] #> Big Integer ('bigz') : #> [1] 485753816 #>  #> $values[[332]] #> Big Integer ('bigz') : #> [1] 242876908 #>  #> $values[[333]] #> Big Integer ('bigz') : #> [1] 121438454 #>  #> $values[[334]] #> Big Integer ('bigz') : #> [1] 60719227 #>  #> $values[[335]] #> Big Integer ('bigz') : #> [1] 182157682 #>  #> $values[[336]] #> Big Integer ('bigz') : #> [1] 91078841 #>  #> $values[[337]] #> Big Integer ('bigz') : #> [1] 273236524 #>  #> $values[[338]] #> Big Integer ('bigz') : #> [1] 136618262 #>  #> $values[[339]] #> Big Integer ('bigz') : #> [1] 68309131 #>  #> $values[[340]] #> Big Integer ('bigz') : #> [1] 204927394 #>  #> $values[[341]] #> Big Integer ('bigz') : #> [1] 102463697 #>  #> $values[[342]] #> Big Integer ('bigz') : #> [1] 307391092 #>  #> $values[[343]] #> Big Integer ('bigz') : #> [1] 153695546 #>  #> $values[[344]] #> Big Integer ('bigz') : #> [1] 76847773 #>  #> $values[[345]] #> Big Integer ('bigz') : #> [1] 230543320 #>  #> $values[[346]] #> Big Integer ('bigz') : #> [1] 115271660 #>  #> $values[[347]] #> Big Integer ('bigz') : #> [1] 57635830 #>  #> $values[[348]] #> Big Integer ('bigz') : #> [1] 28817915 #>  #> $values[[349]] #> Big Integer ('bigz') : #> [1] 86453746 #>  #> $values[[350]] #> Big Integer ('bigz') : #> [1] 43226873 #>  #> $values[[351]] #> Big Integer ('bigz') : #> [1] 129680620 #>  #> $values[[352]] #> Big Integer ('bigz') : #> [1] 64840310 #>  #> $values[[353]] #> Big Integer ('bigz') : #> [1] 32420155 #>  #> $values[[354]] #> Big Integer ('bigz') : #> [1] 97260466 #>  #> $values[[355]] #> Big Integer ('bigz') : #> [1] 48630233 #>  #> $values[[356]] #> Big Integer ('bigz') : #> [1] 145890700 #>  #> $values[[357]] #> Big Integer ('bigz') : #> [1] 72945350 #>  #> $values[[358]] #> Big Integer ('bigz') : #> [1] 36472675 #>  #> $values[[359]] #> Big Integer ('bigz') : #> [1] 109418026 #>  #> $values[[360]] #> Big Integer ('bigz') : #> [1] 54709013 #>  #> $values[[361]] #> Big Integer ('bigz') : #> [1] 164127040 #>  #> $values[[362]] #> Big Integer ('bigz') : #> [1] 82063520 #>  #> $values[[363]] #> Big Integer ('bigz') : #> [1] 41031760 #>  #> $values[[364]] #> Big Integer ('bigz') : #> [1] 20515880 #>  #> $values[[365]] #> Big Integer ('bigz') : #> [1] 10257940 #>  #> $values[[366]] #> Big Integer ('bigz') : #> [1] 5128970 #>  #> $values[[367]] #> Big Integer ('bigz') : #> [1] 2564485 #>  #> $values[[368]] #> Big Integer ('bigz') : #> [1] 7693456 #>  #> $values[[369]] #> Big Integer ('bigz') : #> [1] 3846728 #>  #> $values[[370]] #> Big Integer ('bigz') : #> [1] 1923364 #>  #> $values[[371]] #> Big Integer ('bigz') : #> [1] 961682 #>  #> $values[[372]] #> Big Integer ('bigz') : #> [1] 480841 #>  #> $values[[373]] #> Big Integer ('bigz') : #> [1] 1442524 #>  #> $values[[374]] #> Big Integer ('bigz') : #> [1] 721262 #>  #> $values[[375]] #> Big Integer ('bigz') : #> [1] 360631 #>  #> $values[[376]] #> Big Integer ('bigz') : #> [1] 1081894 #>  #> $values[[377]] #> Big Integer ('bigz') : #> [1] 540947 #>  #> $values[[378]] #> Big Integer ('bigz') : #> [1] 1622842 #>  #> $values[[379]] #> Big Integer ('bigz') : #> [1] 811421 #>  #> $values[[380]] #> Big Integer ('bigz') : #> [1] 2434264 #>  #> $values[[381]] #> Big Integer ('bigz') : #> [1] 1217132 #>  #> $values[[382]] #> Big Integer ('bigz') : #> [1] 608566 #>  #> $values[[383]] #> Big Integer ('bigz') : #> [1] 304283 #>  #> $values[[384]] #> Big Integer ('bigz') : #> [1] 912850 #>  #> $values[[385]] #> Big Integer ('bigz') : #> [1] 456425 #>  #> $values[[386]] #> Big Integer ('bigz') : #> [1] 1369276 #>  #> $values[[387]] #> Big Integer ('bigz') : #> [1] 684638 #>  #> $values[[388]] #> Big Integer ('bigz') : #> [1] 342319 #>  #> $values[[389]] #> Big Integer ('bigz') : #> [1] 1026958 #>  #> $values[[390]] #> Big Integer ('bigz') : #> [1] 513479 #>  #> $values[[391]] #> Big Integer ('bigz') : #> [1] 1540438 #>  #> $values[[392]] #> Big Integer ('bigz') : #> [1] 770219 #>  #> $values[[393]] #> Big Integer ('bigz') : #> [1] 2310658 #>  #> $values[[394]] #> Big Integer ('bigz') : #> [1] 1155329 #>  #> $values[[395]] #> Big Integer ('bigz') : #> [1] 3465988 #>  #> $values[[396]] #> Big Integer ('bigz') : #> [1] 1732994 #>  #> $values[[397]] #> Big Integer ('bigz') : #> [1] 866497 #>  #> $values[[398]] #> Big Integer ('bigz') : #> [1] 2599492 #>  #> $values[[399]] #> Big Integer ('bigz') : #> [1] 1299746 #>  #> $values[[400]] #> Big Integer ('bigz') : #> [1] 649873 #>  #> $values[[401]] #> Big Integer ('bigz') : #> [1] 1949620 #>  #> $values[[402]] #> Big Integer ('bigz') : #> [1] 974810 #>  #> $values[[403]] #> Big Integer ('bigz') : #> [1] 487405 #>  #> $values[[404]] #> Big Integer ('bigz') : #> [1] 1462216 #>  #> $values[[405]] #> Big Integer ('bigz') : #> [1] 731108 #>  #> $values[[406]] #> Big Integer ('bigz') : #> [1] 365554 #>  #> $values[[407]] #> Big Integer ('bigz') : #> [1] 182777 #>  #> $values[[408]] #> Big Integer ('bigz') : #> [1] 548332 #>  #> $values[[409]] #> Big Integer ('bigz') : #> [1] 274166 #>  #> $values[[410]] #> Big Integer ('bigz') : #> [1] 137083 #>  #> $values[[411]] #> Big Integer ('bigz') : #> [1] 411250 #>  #> $values[[412]] #> Big Integer ('bigz') : #> [1] 205625 #>  #> $values[[413]] #> Big Integer ('bigz') : #> [1] 616876 #>  #> $values[[414]] #> Big Integer ('bigz') : #> [1] 308438 #>  #> $values[[415]] #> Big Integer ('bigz') : #> [1] 154219 #>  #> $values[[416]] #> Big Integer ('bigz') : #> [1] 462658 #>  #> $values[[417]] #> Big Integer ('bigz') : #> [1] 231329 #>  #> $values[[418]] #> Big Integer ('bigz') : #> [1] 693988 #>  #> $values[[419]] #> Big Integer ('bigz') : #> [1] 346994 #>  #> $values[[420]] #> Big Integer ('bigz') : #> [1] 173497 #>  #> $values[[421]] #> Big Integer ('bigz') : #> [1] 520492 #>  #> $values[[422]] #> Big Integer ('bigz') : #> [1] 260246 #>  #> $values[[423]] #> Big Integer ('bigz') : #> [1] 130123 #>  #> $values[[424]] #> Big Integer ('bigz') : #> [1] 390370 #>  #> $values[[425]] #> Big Integer ('bigz') : #> [1] 195185 #>  #> $values[[426]] #> Big Integer ('bigz') : #> [1] 585556 #>  #> $values[[427]] #> Big Integer ('bigz') : #> [1] 292778 #>  #> $values[[428]] #> Big Integer ('bigz') : #> [1] 146389 #>  #> $values[[429]] #> Big Integer ('bigz') : #> [1] 439168 #>  #> $values[[430]] #> Big Integer ('bigz') : #> [1] 219584 #>  #> $values[[431]] #> Big Integer ('bigz') : #> [1] 109792 #>  #> $values[[432]] #> Big Integer ('bigz') : #> [1] 54896 #>  #> $values[[433]] #> Big Integer ('bigz') : #> [1] 27448 #>  #> $values[[434]] #> Big Integer ('bigz') : #> [1] 13724 #>  #> $values[[435]] #> Big Integer ('bigz') : #> [1] 6862 #>  #> $values[[436]] #> Big Integer ('bigz') : #> [1] 3431 #>  #> $values[[437]] #> Big Integer ('bigz') : #> [1] 10294 #>  #> $values[[438]] #> Big Integer ('bigz') : #> [1] 5147 #>  #> $values[[439]] #> Big Integer ('bigz') : #> [1] 15442 #>  #> $values[[440]] #> Big Integer ('bigz') : #> [1] 7721 #>  #> $values[[441]] #> Big Integer ('bigz') : #> [1] 23164 #>  #> $values[[442]] #> Big Integer ('bigz') : #> [1] 11582 #>  #> $values[[443]] #> Big Integer ('bigz') : #> [1] 5791 #>  #> $values[[444]] #> Big Integer ('bigz') : #> [1] 17374 #>  #> $values[[445]] #> Big Integer ('bigz') : #> [1] 8687 #>  #> $values[[446]] #> Big Integer ('bigz') : #> [1] 26062 #>  #> $values[[447]] #> Big Integer ('bigz') : #> [1] 13031 #>  #> $values[[448]] #> Big Integer ('bigz') : #> [1] 39094 #>  #> $values[[449]] #> Big Integer ('bigz') : #> [1] 19547 #>  #> $values[[450]] #> Big Integer ('bigz') : #> [1] 58642 #>  #> $values[[451]] #> Big Integer ('bigz') : #> [1] 29321 #>  #> $values[[452]] #> Big Integer ('bigz') : #> [1] 87964 #>  #> $values[[453]] #> Big Integer ('bigz') : #> [1] 43982 #>  #> $values[[454]] #> Big Integer ('bigz') : #> [1] 21991 #>  #> $values[[455]] #> Big Integer ('bigz') : #> [1] 65974 #>  #> $values[[456]] #> Big Integer ('bigz') : #> [1] 32987 #>  #> $values[[457]] #> Big Integer ('bigz') : #> [1] 98962 #>  #> $values[[458]] #> Big Integer ('bigz') : #> [1] 49481 #>  #> $values[[459]] #> Big Integer ('bigz') : #> [1] 148444 #>  #> $values[[460]] #> Big Integer ('bigz') : #> [1] 74222 #>  #> $values[[461]] #> Big Integer ('bigz') : #> [1] 37111 #>  #> $values[[462]] #> Big Integer ('bigz') : #> [1] 111334 #>  #> $values[[463]] #> Big Integer ('bigz') : #> [1] 55667 #>  #> $values[[464]] #> Big Integer ('bigz') : #> [1] 167002 #>  #> $values[[465]] #> Big Integer ('bigz') : #> [1] 83501 #>  #> $values[[466]] #> Big Integer ('bigz') : #> [1] 250504 #>  #> $values[[467]] #> Big Integer ('bigz') : #> [1] 125252 #>  #> $values[[468]] #> Big Integer ('bigz') : #> [1] 62626 #>  #> $values[[469]] #> Big Integer ('bigz') : #> [1] 31313 #>  #> $values[[470]] #> Big Integer ('bigz') : #> [1] 93940 #>  #> $values[[471]] #> Big Integer ('bigz') : #> [1] 46970 #>  #> $values[[472]] #> Big Integer ('bigz') : #> [1] 23485 #>  #> $values[[473]] #> Big Integer ('bigz') : #> [1] 70456 #>  #> $values[[474]] #> Big Integer ('bigz') : #> [1] 35228 #>  #> $values[[475]] #> Big Integer ('bigz') : #> [1] 17614 #>  #> $values[[476]] #> Big Integer ('bigz') : #> [1] 8807 #>  #> $values[[477]] #> Big Integer ('bigz') : #> [1] 26422 #>  #> $values[[478]] #> Big Integer ('bigz') : #> [1] 13211 #>  #> $values[[479]] #> Big Integer ('bigz') : #> [1] 39634 #>  #> $values[[480]] #> Big Integer ('bigz') : #> [1] 19817 #>  #> $values[[481]] #> Big Integer ('bigz') : #> [1] 59452 #>  #> $values[[482]] #> Big Integer ('bigz') : #> [1] 29726 #>  #> $values[[483]] #> Big Integer ('bigz') : #> [1] 14863 #>  #> $values[[484]] #> Big Integer ('bigz') : #> [1] 44590 #>  #> $values[[485]] #> Big Integer ('bigz') : #> [1] 22295 #>  #> $values[[486]] #> Big Integer ('bigz') : #> [1] 66886 #>  #> $values[[487]] #> Big Integer ('bigz') : #> [1] 33443 #>  #> $values[[488]] #> Big Integer ('bigz') : #> [1] 100330 #>  #> $values[[489]] #> Big Integer ('bigz') : #> [1] 50165 #>  #> $values[[490]] #> Big Integer ('bigz') : #> [1] 150496 #>  #> $values[[491]] #> Big Integer ('bigz') : #> [1] 75248 #>  #> $values[[492]] #> Big Integer ('bigz') : #> [1] 37624 #>  #> $values[[493]] #> Big Integer ('bigz') : #> [1] 18812 #>  #> $values[[494]] #> Big Integer ('bigz') : #> [1] 9406 #>  #> $values[[495]] #> Big Integer ('bigz') : #> [1] 4703 #>  #> $values[[496]] #> Big Integer ('bigz') : #> [1] 14110 #>  #> $values[[497]] #> Big Integer ('bigz') : #> [1] 7055 #>  #> $values[[498]] #> Big Integer ('bigz') : #> [1] 21166 #>  #> $values[[499]] #> Big Integer ('bigz') : #> [1] 10583 #>  #> $values[[500]] #> Big Integer ('bigz') : #> [1] 31750 #>  #> $values[[501]] #> Big Integer ('bigz') : #> [1] 15875 #>  #> $values[[502]] #> Big Integer ('bigz') : #> [1] 47626 #>  #> $values[[503]] #> Big Integer ('bigz') : #> [1] 23813 #>  #> $values[[504]] #> Big Integer ('bigz') : #> [1] 71440 #>  #> $values[[505]] #> Big Integer ('bigz') : #> [1] 35720 #>  #> $values[[506]] #> Big Integer ('bigz') : #> [1] 17860 #>  #> $values[[507]] #> Big Integer ('bigz') : #> [1] 8930 #>  #> $values[[508]] #> Big Integer ('bigz') : #> [1] 4465 #>  #> $values[[509]] #> Big Integer ('bigz') : #> [1] 13396 #>  #> $values[[510]] #> Big Integer ('bigz') : #> [1] 6698 #>  #> $values[[511]] #> Big Integer ('bigz') : #> [1] 3349 #>  #> $values[[512]] #> Big Integer ('bigz') : #> [1] 10048 #>  #> $values[[513]] #> Big Integer ('bigz') : #> [1] 5024 #>  #> $values[[514]] #> Big Integer ('bigz') : #> [1] 2512 #>  #> $values[[515]] #> Big Integer ('bigz') : #> [1] 1256 #>  #> $values[[516]] #> Big Integer ('bigz') : #> [1] 628 #>  #> $values[[517]] #> Big Integer ('bigz') : #> [1] 314 #>  #> $values[[518]] #> Big Integer ('bigz') : #> [1] 157 #>  #> $values[[519]] #> Big Integer ('bigz') : #> [1] 472 #>  #> $values[[520]] #> Big Integer ('bigz') : #> [1] 236 #>  #> $values[[521]] #> Big Integer ('bigz') : #> [1] 118 #>  #> $values[[522]] #> Big Integer ('bigz') : #> [1] 59 #>  #> $values[[523]] #> Big Integer ('bigz') : #> [1] 178 #>  #> $values[[524]] #> Big Integer ('bigz') : #> [1] 89 #>  #> $values[[525]] #> Big Integer ('bigz') : #> [1] 268 #>  #> $values[[526]] #> Big Integer ('bigz') : #> [1] 134 #>  #> $values[[527]] #> Big Integer ('bigz') : #> [1] 67 #>  #> $values[[528]] #> Big Integer ('bigz') : #> [1] 202 #>  #> $values[[529]] #> Big Integer ('bigz') : #> [1] 101 #>  #> $values[[530]] #> Big Integer ('bigz') : #> [1] 304 #>  #> $values[[531]] #> Big Integer ('bigz') : #> [1] 152 #>  #> $values[[532]] #> Big Integer ('bigz') : #> [1] 76 #>  #> $values[[533]] #> Big Integer ('bigz') : #> [1] 38 #>  #> $values[[534]] #> Big Integer ('bigz') : #> [1] 19 #>  #> $values[[535]] #> Big Integer ('bigz') : #> [1] 58 #>  #> $values[[536]] #> Big Integer ('bigz') : #> [1] 29 #>  #> $values[[537]] #> Big Integer ('bigz') : #> [1] 88 #>  #> $values[[538]] #> Big Integer ('bigz') : #> [1] 44 #>  #> $values[[539]] #> Big Integer ('bigz') : #> [1] 22 #>  #> $values[[540]] #> Big Integer ('bigz') : #> [1] 11 #>  #> $values[[541]] #> Big Integer ('bigz') : #> [1] 34 #>  #> $values[[542]] #> Big Integer ('bigz') : #> [1] 17 #>  #> $values[[543]] #> Big Integer ('bigz') : #> [1] 52 #>  #> $values[[544]] #> Big Integer ('bigz') : #> [1] 26 #>  #> $values[[545]] #> Big Integer ('bigz') : #> [1] 13 #>  #> $values[[546]] #> Big Integer ('bigz') : #> [1] 40 #>  #> $values[[547]] #> Big Integer ('bigz') : #> [1] 20 #>  #> $values[[548]] #> Big Integer ('bigz') : #> [1] 10 #>  #> $values[[549]] #> Big Integer ('bigz') : #> [1] 5 #>  #> $values[[550]] #> Big Integer ('bigz') : #> [1] 16 #>  #> $values[[551]] #> Big Integer ('bigz') : #> [1] 8 #>  #> $values[[552]] #> Big Integer ('bigz') : #> [1] 4 #>  #> $values[[553]] #> Big Integer ('bigz') : #> [1] 2 #>  #> $values[[554]] #> Big Integer ('bigz') : #> [1] 1 #>  #>  #> $terminalCondition #> [1] \"TOTAL_STOPPING_TIME\" #>  #> $terminalStatus #> [1] 553 #>"},{"path":"https://skenvy.github.io/Collatz/R/reference/reverse_function.html","id":null,"dir":"Reference","previous_headings":"","what":"The ","title":"The ","text":"Calculates values return input Collatz function.","code":""},{"path":"https://skenvy.github.io/Collatz/R/reference/reverse_function.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"The ","text":"","code":"reverse_function(n, P = 2, a = 3, b = 1)"},{"path":"https://skenvy.github.io/Collatz/R/reference/reverse_function.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"The ","text":"n (numeric|bigz) value perform reverse Collatz function P (numeric|bigz) Modulus used divide n, iff n equivalent (0 mod P) Default 2. (numeric|bigz) Factor multiply n. Default 3. b (numeric|bigz) Value add scaled value n. Default 1.","code":""},{"path":"https://skenvy.github.io/Collatz/R/reference/reverse_function.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"The ","text":"list either numeric bigz type","code":""},{"path":"https://skenvy.github.io/Collatz/R/reference/reverse_function.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"The ","text":"Returns output single application Collatz-esque reverse function. one value returned, value divided P. two values returned, first value divided P, second value undergo multiply add step, regardless larger.","code":""},{"path":"https://skenvy.github.io/Collatz/R/reference/reverse_function.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"The ","text":"","code":"# Calculates the values that would return the input under the Collatz # function. Without `gmp` or parameterisation, we can try something # simple like reverse_function(1) #> [[1]] #> [1] 2 #>  reverse_function(2) #> [[1]] #> [1] 4 #>  reverse_function(4) #> [[1]] #> [1] 8 #>  #> [[2]] #> [1] 1 #>  # If we want change the default parameterisation we can; reverse_function(3, -3, -2, -5) #> [[1]] #> [1] -9 #>  #> [[2]] #> [1] -4 #>  # Or if we only want to change one of them reverse_function(16, a=5) #> [[1]] #> [1] 32 #>  #> [[2]] #> [1] 3 #>  # All the above work fine, but the function doesn't offer protection against # overflowing integers by default. To venture into the world of arbitrary # integer inputs we can use an `as.bigz` from `gmp`. Compare the two; reverse_function(99999999999999999999) #> Warning: probable complete loss of accuracy in modulus #> [[1]] #> [1] 2e+20 #>  reverse_function(as.bigz(\"99999999999999999999\")) #> [[1]] #> Big Integer ('bigz') : #> [1] 199999999999999999998 #>"},{"path":"https://skenvy.github.io/Collatz/R/reference/stopping_time.html","id":null,"dir":"Reference","previous_headings":"","what":"Stopping Time — stopping_time","title":"Stopping Time — stopping_time","text":"Determine stopping time, \"total\" stopping time, initial value.","code":""},{"path":"https://skenvy.github.io/Collatz/R/reference/stopping_time.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Stopping Time — stopping_time","text":"","code":"stopping_time(   initial_value,   P = 2,   a = 3,   b = 1,   max_stopping_time = 1000,   total_stopping_time = FALSE )"},{"path":"https://skenvy.github.io/Collatz/R/reference/stopping_time.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Stopping Time — stopping_time","text":"initial_value (int): value find stopping time. P (numeric|bigz): Modulus used divide n, iff n equivalent (0 mod P). Default 2. (numeric|bigz) Factor multiply n. Default 3. b (numeric|bigz) Value add scaled value n. Default 1. max_stopping_time (int) Maximum amount times iterate function, stopping time reached. max_stopping_time reached, function return NaN. Default 1000. total_stopping_time (bool) Whether execute \"total\" stopping time (number iterations obtain 1) rather regular stopping time (number iterations reach value less initial value). Default FALSE.","code":""},{"path":"https://skenvy.github.io/Collatz/R/reference/stopping_time.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Stopping Time — stopping_time","text":"integer numeral stopped, Inf cycle, NaN OOB, else NA.","code":""},{"path":"https://skenvy.github.io/Collatz/R/reference/stopping_time.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Stopping Time — stopping_time","text":"Returns stopping time, amount iterations required reach value less initial value, NaN max_stopping_time exceeded. Alternatively, total_stopping_time TRUE, instead count amount iterations reach 1. sequence stop, instead ends cycle, result (Inf). (P,,b) possible get stuck zero, result negative otherwise \"total stopping time\" reach 1, 0 considered \"total stop\" occur form cycle length 1.","code":""},{"path":"https://skenvy.github.io/Collatz/R/reference/stopping_time.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Stopping Time — stopping_time","text":"","code":"# Calculates the \"stopping time\", or optionally the \"total\" stopping time. # Without `gmp` or parameterisation, we can try something simple like stopping_time(27) #> [1] 96 stopping_time(27, total_stopping_time=TRUE) #> [1] 111 # If we want change the default parameterisation we can; stopping_time(3, 5, 2, 1) #> [1] Inf # Or if we only want to change one of them stopping_time(17, a=5) #> [1] Inf # All the above work fine, but the function doesn't offer protection against # overflowing integers by default. To venture into the world of arbitrary # integer inputs we can use an `as.bigz` from `gmp`. Compare the two; stopping_time(99999999999999999999) #> Warning: probable complete loss of accuracy in modulus #> Warning: probable complete loss of accuracy in modulus #> [1] 1 stopping_time(as.bigz(\"99999999999999999999\")) #> [1] 114 # As an extra note, the original motivation for creating a range of Collatz # themed packages came from some earlier scripts for calculating the stopping # distances under certain parameterisations. An inconsequential result of # which was observing that all of the following, for however high `k` goes, # should equal `96`! stopping_time(27) #> [1] 96 stopping_time(27+as.bigz(\"576460752303423488\")) #> [1] 96 stopping_time(27+(2*as.bigz(\"576460752303423488\"))) #> [1] 96 stopping_time(27+(3*as.bigz(\"576460752303423488\"))) #> [1] 96 stopping_time(27+(4*as.bigz(\"576460752303423488\"))) #> [1] 96"},{"path":"https://skenvy.github.io/Collatz/R/reference/stopping_time_terminus.html","id":null,"dir":"Reference","previous_headings":"","what":"Stopping Time Terminus — stopping_time_terminus","title":"Stopping Time Terminus — stopping_time_terminus","text":"Provides appropriate lambda use check iterations initial value reached either stopping time, total stopping time.","code":""},{"path":"https://skenvy.github.io/Collatz/R/reference/stopping_time_terminus.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Stopping Time Terminus — stopping_time_terminus","text":"","code":"stopping_time_terminus(n, total_stop)"},{"path":"https://skenvy.github.io/Collatz/R/reference/stopping_time_terminus.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Stopping Time Terminus — stopping_time_terminus","text":"n initial value confirm stopping time check. total_stop false, lambda confirm iterations n reached oriented stopping time reach value closer 0. true, lambda simply check equality 1.","code":""},{"path":"https://skenvy.github.io/Collatz/R/reference/stopping_time_terminus.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Stopping Time Terminus — stopping_time_terminus","text":"anonymous function check stopping time.","code":""},{"path":"https://skenvy.github.io/Collatz/R/reference/tree_graph.html","id":null,"dir":"Reference","previous_headings":"","what":"Tree Graph — tree_graph","title":"Tree Graph — tree_graph","text":"Determine Tree Graph depth iteratively reversing values.","code":""},{"path":"https://skenvy.github.io/Collatz/R/reference/tree_graph.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Tree Graph — tree_graph","text":"","code":"tree_graph(   initial_value,   max_orbit_distance,   P = 2,   a = 3,   b = 1,   cycle_prevention = list() )"},{"path":"https://skenvy.github.io/Collatz/R/reference/tree_graph.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Tree Graph — tree_graph","text":"initial_value (int) root value directed tree graph. max_orbit_distance (int) Maximum amount times iterate reverse function. natural termination populating tree graph, equivalent termination hailstone sequences stopping time attempts, optional argument like max_stopping_time max_total_stopping_time, intended target orbits obtain, rather limit avoid uncapped computation. P (numeric|bigz): Modulus used divide n, iff n equivalent (0 mod P). Default 2. (numeric|bigz) Factor multiply n. Default 3. b (numeric|bigz) Value add scaled value n. Default 1. cycle_prevention (set[int]) Used prevent cycles precipitating keeping track values added across previous nest depths. used internally function recursing. expect input.","code":""},{"path":"https://skenvy.github.io/Collatz/R/reference/tree_graph.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Tree Graph — tree_graph","text":"set nested dictionaries.","code":""},{"path":"https://skenvy.github.io/Collatz/R/reference/tree_graph.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Tree Graph — tree_graph","text":"Returns nested dictionaries model directed tree graph maximum nesting max_orbit_distance, initial_value root.","code":""},{"path":"https://skenvy.github.io/Collatz/R/reference/tree_graph.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Tree Graph — tree_graph","text":"","code":"#Compute a tree graph, which takes both a value to initialise the tree from, # and an \"orbit distance\" for how many layers deep in the tree to compute; tree_graph(16, 3) #> $`16` #> $`16`$`32` #> $`16`$`32`$`64` #> $`16`$`32`$`64`$`128` #> [1] NA #>  #> $`16`$`32`$`64`$`21` #> [1] NA #>  #>  #>  #> $`16`$`5` #> $`16`$`5`$`10` #> $`16`$`5`$`10`$`20` #> [1] NA #>  #> $`16`$`5`$`10`$`3` #> [1] NA #>  #>  #>  #>  # It will also stop on finding a cycle; tree_graph(4, 3) #> $`4` #> $`4`$`8` #> $`4`$`8`$`16` #> $`4`$`8`$`16`$`32` #> [1] NA #>  #> $`4`$`8`$`16`$`5` #> [1] NA #>  #>  #>  #> $`4`$`1` #> $`4`$`1`$`2` #> $`4`$`1`$`2`$CYCLE_INIT #> [1] 4 #>  #>  #>  #>  # And can be parameterised; tree_graph(1, 1, -3, -2, -5) #> $`1` #> $`1`$`-3` #> [1] NA #>  #>  # If b is a multiple of a, but not of Pa, then 0 can have a reverse; tree_graph(0, 1, 17, 2, -6) #> $`0` #> $`0`$CYCLE_INIT #> [1] 0 #>  #> $`0`$`3` #> [1] NA #>  #>  # The tree graph can run on `bigz`; tree_graph((27+as.bigz(\"576460752303423488\")), 3) #> $`576460752303423515` #> $`576460752303423515`$`1152921504606847030` #> $`576460752303423515`$`1152921504606847030`$`2305843009213694060` #> $`576460752303423515`$`1152921504606847030`$`2305843009213694060`$`4611686018427388120` #> [1] NA #>  #>  #> $`576460752303423515`$`1152921504606847030`$`384307168202282343` #> $`576460752303423515`$`1152921504606847030`$`384307168202282343`$`768614336404564686` #> [1] NA #>  #>  #>  #>"}]
