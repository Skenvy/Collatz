name: Julia 🚥 Test 🦂 Build 🧱 Release 🚰 and Publish 📦
on:
  push:
    branches:    
    # github.event.ref == refs/heads/main
    - 'main'
    paths:
    # contains(github.event.commits[][modified], 'julia/Project.toml')
    # ^ although it would be easy to git diff between the before and after commits on the event
    # it appears the above "commits[][modified]"" syntax doesn't actually work ~ causing a
    # "The workflow is not valid." ... "Unexpected symbol: ']'", and 'if' can only use contexts
    # https://github.blog/changelog/2019-10-16-changes-in-github-actions-push-event-payload/
    - 'julia/Project.toml'
    # The project toml contains _more_ than _just_ the version, but updating it would reflect
    # a logical update to the project which semantically _should_ include a version update.
  workflow_dispatch: # manual, rather than tag triggering
defaults:
  run:
    shell: bash
    working-directory: julia
jobs:
  context:
    name: GitHub 🐱‍👤 Context 📑
    uses: ./.github/workflows/github-context.yaml
  test:
    name: Julia 🚥 Test 🦂
    uses: ./.github/workflows/julia-test.yaml
  build:
    name: Julia 🚥 Build 🧱
    needs: [test]
    runs-on: ubuntu-latest
    steps:
    - name: 🏁 Checkout
      uses: actions/checkout@v3
  #   - name: 🚥 Set up Julia
  #     uses: actions/setup-julia@v3
  #     with:
  #       julia-version: '3.10'
  #   - name: 🧱 Install build dependencies
  #     run: |
  #       make venv
  #   - name: 🎡 Build wheel and source
  #     run: |
  #       make build
  #   - name: 🆙 Upload dists
  #     uses: actions/upload-artifact@v3
  #     with:
  #       name: built-dists
  #       path: julia/dist/
  #       if-no-files-found: error
  # release:
  #   name: Julia 🚥 Release 🚰
  #   needs: [build]
  #   runs-on: ubuntu-latest
  #   steps:
  #   - name: 🏁 Checkout
  #     uses: actions/checkout@v3
  #   - name: 🆒 Download dists
  #     uses: actions/download-artifact@v3
  #     with:
  #       name: built-dists
  #       path: julia/dist
  #   - name: 🚰 Release
  #     env:
  #       GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  #     run: >-
  #       export VER=$(cut -d \" -f 2 src/collatz/__version__.py) && 
  #       gh release create
  #       julia-v$VER
  #       "$(find dist | grep \\-none\\-any\\.whl)#Wheel"
  #       "$(find dist | grep \\.tar\\.gz)#Tarball"
  #       --generate-notes
  #       -t "Julia: Version $VER"
  # context-after-release:
  #   name: GitHub 🐱‍👤 Context 📑 AFTER Release 🚰
  #   needs: [release]
  #   uses: ./.github/workflows/github-context.yaml
  # publish:
  #   name: Julia 🚥 Publish 📦
  #   needs: [release]
  #   runs-on: ubuntu-latest
  #   steps:
  #   # Although the dists are built uses checkout to satisfy refs/tags existence
  #   # which were created by the release, prior to uploading to pypi.
  #   - name: 🏁 Checkout
  #     uses: actions/checkout@v3
  #   - name: 🆒 Download dists
  #     uses: actions/download-artifact@v3
  #     with:
  #       name: built-dists
  #       path: julia/dist
  #   - name: 📦 Publish to Test PyPI
  #     uses: pypa/gh-action-pypi-publish@release/v1.5
  #     with:
  #       packages_dir: julia/dist
  #       skip_existing: true
  #       password: ${{ secrets.TEST_PYPI_API_TOKEN }}
  #       repository_url: https://test.pypi.org/legacy/
  #   - name: 📦 Publish to PyPI
  #     if: startsWith(github.ref, 'refs/tags')
  #     uses: pypa/gh-action-pypi-publish@release/v1.5
  #     with:
  #       packages_dir: julia/dist
  #       password: ${{ secrets.PYPI_API_TOKEN }}
