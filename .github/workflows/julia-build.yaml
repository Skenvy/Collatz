name: Julia 🔴🟢🟣 Test 🦂 Release 🚰 and Register 📦
on:
  push:
    branches:    
    # github.event.ref == refs/heads/main
    - 'main'
    paths:
    # contains(github.event.commits[][modified], 'julia/Project.toml')
    # ^ although it would be easy to git diff between the before and after commits on the event
    # it appears the above "commits[][modified]"" syntax doesn't actually work ~ causing a
    # "The workflow is not valid." ... "Unexpected symbol: ']'", and 'if' can only use contexts
    # https://github.blog/changelog/2019-10-16-changes-in-github-actions-push-event-payload/
    - 'julia/Project.toml'
    # The project toml contains _more_ than _just_ the version, but updating it would reflect
    # a logical update to the project which semantically _should_ include a version update.
  workflow_dispatch: # manual, rather than tag triggering
defaults:
  run:
    shell: bash
    working-directory: julia
jobs:
  context:
    name: GitHub 🐱‍👤 Context 📑
    uses: ./.github/workflows/github-context.yaml
  test:
    name: Julia 🔴🟢🟣 Test 🦂
    uses: ./.github/workflows/julia-test.yaml
  # It seems that the typical "build" step is not
  # part of uploading a package in Julia.
  release-and-register:
    name: Julia 🔴🟢🟣 Release 🚰 and Register 📦
    needs: [test]
    runs-on: ubuntu-latest
    steps:
    - name: 🏁 Checkout
      uses: actions/checkout@v3
      with:
        fetch-depth: 0
    - name: Julia 🔴🟢🟣 Release 🚰 and Register 📦
      uses: Skenvy/julia-release@v1
      id: release_step
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        deployment_branch: 'main'
        subdirectory: "julia"
        release_tag_template: "julia-v<NEW_VERSION>"
        release_name_template: "Julia: Version <NEW_VERSION>"
  docs:
    name: Julia 🔴🟢🟣 Docs 📄
    needs: [test, release-and-register]
    runs-on: ubuntu-latest
    steps:
    - name: 🏁 Checkout
      uses: actions/checkout@v3
    - name: 🔴🟢🟣 Set up Julia
      uses: julia-actions/setup-julia@v1.6
      with:
        version: '1.7.2'
    - name: 📄 Docs
      run: make docs_deploy
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
