name: Java ☕🦆🌞 Test 🦂 Build 🧱 Release 🚰 and Publish 📦
on:
  push:
    branches:
    - 'main'
    paths:
    - 'java/**'
    - '.github/workflows/java-*'
  workflow_dispatch:
defaults:
  run:
    shell: bash
    working-directory: java
jobs:
  context:
    name: GitHub 🐱‍👤 Context 📑
    uses: ./.github/workflows/github-context.yaml
  test:
    name: Java ☕🦆🌞 Test 🦂
    uses: ./.github/workflows/java-test.yaml
  workflow-conditions:
    name: 🛑🛑🛑 Stop builds that didn't change the release version 🛑🛑🛑
    runs-on: ubuntu-latest
    outputs:
      version-file-changed: ${{ steps.version-file-check.outputs.version-file-changed }}
    steps:
    - name: 🏁 Checkout
      uses: actions/checkout@v3
      with:
        fetch-depth: 2
    - name: Check if version files changed
      id: version-file-check
      run: |
        export VERSION_FILE="java/pom.xml"
        [ "$(git diff HEAD^1.. --name-only | grep -e "^$VERSION_FILE$")" == "$VERSION_FILE" ] && echo "::set-output name=version-file-changed::${{toJSON(true)}}" || echo "::set-output name=version-file-changed::${{toJSON(false)}}"
    - name: Notify of conditions
      run: echo "::Notice::version-file-changed is ${{ fromJSON(steps.version-file-check.outputs.version-file-changed) }}"
  # Now any step that should only run on the version change can use "needs: [workflow-conditions]"
  # Which will yield the condition check "if: ${{ fromJSON(needs.workflow-conditions.outputs.version-file-changed) == true }}"
  build:
    name: Java ☕🦆🌞 Build 🧱
    needs: [test, workflow-conditions]
    if: ${{ fromJSON(needs.workflow-conditions.outputs.version-file-changed) == true }}
    runs-on: ubuntu-latest
    steps:
    - name: 🏁 Checkout
      uses: actions/checkout@v3
    # https://github.com/actions/setup-java
    - name: ☕🦆🌞 Set up Java
      uses: actions/setup-java@v3
      with:
        distribution: 'adopt'
        java-version: '11'
        architecture: x64
        cache: maven
    - name: 🏺 Build jar and source
      run: make build_noninteractive
    - name: 🆙 Upload jar
      uses: actions/upload-artifact@v3
      with:
        name: Package
        path: java/target/*.jar
        if-no-files-found: error
  release:
    name: Java ☕🦆🌞 Release 🚰
    needs: [build]
    runs-on: ubuntu-latest
    steps:
    - name: 🏁 Checkout
      uses: actions/checkout@v3
    - name: 🆒 Download dists
      uses: actions/download-artifact@v3
      with:
        name: Package
        path: java/target
    - name: 🚰 Release
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: |
        export VER=$(mvn help:evaluate -Dexpression="project.version" -q -DforceStdout)
        gh release create java-v$VER --generate-notes -t "Java: Version $VER"
  # publish:
  #   name: Java ☕🦆🌞 Publish 📦
  #   needs: [release]
  #   runs-on: ubuntu-latest
  #   steps:
  #   # Although the dists are built uses checkout to satisfy refs/tags existence
  #   # which were created by the release, prior to uploading to pypi.
  #   - name: 🏁 Checkout
  #     uses: actions/checkout@v3
  #   # - name: 🆒 Download dists
  #   #   uses: actions/download-artifact@v3
  #   #   with:
  #   #     name: some-artefacts
  #   #     path: java/some-artefacts
  #   - name: 📦 Publish
  #     run: make build_noninteractive
  #   # TODO: run: or uses: something depending on the languges
  # docs:
  #   name: Java ☕🦆🌞 Docs 📄
  #   needs: [release, publish]
  #   runs-on: ubuntu-latest
  #   steps:
  #   - name: 🏁 Checkout
  #     uses: actions/checkout@v3
  #   # https://github.com/actions/setup-java
  #   - name: ☕🦆🌞 Set up Java
  #     uses: actions/setup-java@v3
  #     with:
  #       distribution: 'adopt'
  #       java-version: '11'
  #       architecture: x64
  #       cache: maven
  #   - name: 📄 Docs
  #     run: |
  #       export GITHUB_REF="refs/tags/v${{ needs.release-and-register.outputs.new_version }}"
  #       # make docs_deploy <<< should be a recipe that pushes docs to 'gh-pages-java'
  #     env:
  #       GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  # docs-merge:
  #   name: GitHub 🐱‍👤 Pages 📄 Merger 🧬
  #   needs: [docs]
  #   uses: ./.github/workflows/github-pages.yaml
  #   with:
  #     merge_from: 'gh-pages-java'
