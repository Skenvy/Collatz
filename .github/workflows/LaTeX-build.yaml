name: LaTeX 🟢🎶🐦 Test 🦂 Build 🧱 Release 🚰 and Publish 📦
on:
  push:
    branches:
    - 'main'
    paths:
    - 'LaTeX/**'
    - '!LaTeX/**.md'
    - '!LaTeX/.vscode/**'
    - '.github/workflows/LaTeX-*'
  workflow_dispatch:
permissions: {}
defaults:
  run:
    shell: bash
    working-directory: LaTeX
jobs:
  context:
    name: GitHub 🐱‍👤 Context 📑
    uses: ./.github/workflows/github-context.yaml
  # At the moment, the test just builds the pdf. So no need to run it twice.
  # test:
  #   name: LaTeX 🟢🎶🐦 Test 🦂
  #   permissions:
  #     actions: read
  #     contents: read
  #     security-events: write
  #   uses: ./.github/workflows/LaTeX-test.yaml
  workflow-conditions:
    name: 🛑🛑🛑 Stop builds that didn't change the release version 🛑🛑🛑
    runs-on: ubuntu-latest
    outputs:
      version-file-changed: ${{ steps.version-file-check.outputs.version-file-changed }}
      version-tag-exists: ${{ steps.version-tag-exists.outputs.version-tag-exists }}
    steps:
    - name: 🏁 Checkout
      uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
      with:
        fetch-depth: 2
    - name: Check if version files changed
      id: version-file-check
      run: |
        export VERSION_FILE="LaTeX/document.tex"
        [ "$(git diff HEAD^1.. --name-only | grep -e "^$VERSION_FILE$")" == "$VERSION_FILE" ] && echo "version-file-changed=${{toJSON(true)}}" >> $GITHUB_OUTPUT || echo "version-file-changed=${{toJSON(false)}}" >> $GITHUB_OUTPUT
    - name: Notify on version-file-check
      run: echo "::Notice::version-file-changed is ${{ fromJSON(steps.version-file-check.outputs.version-file-changed) }}"
    - name: Check if version specified in version file has not released.
      id: version-tag-exists
      run: |
        git fetch --tags
        export VER=$(head -1 document.tex | cut -d ' ' -f 3)
        [ -z "$(git tag -l "LaTeX-v$VER")" ] && echo "version-tag-exists=${{toJSON(false)}}" >> $GITHUB_OUTPUT || echo "version-tag-exists=${{toJSON(true)}}" >> $GITHUB_OUTPUT
    - name: Notify on version-tag-exists
      run: echo "::Notice::version-tag-exists is ${{ fromJSON(steps.version-tag-exists.outputs.version-tag-exists) }}"
  # Now any step that should only run on the version change can use
  # "needs: [workflow-conditions]" Which will yield the condition checks below.
  # We want to "release" automatically if "version-file-changed" is true on push
  # Or manually if workflow_dispatch. BOTH need "version-tag-exists" is false.
  build:
    name: LaTeX 🟢🎶🐦 Build 🧱
    needs: [workflow-conditions] # test
    if: >-
      ${{ ((fromJSON(needs.workflow-conditions.outputs.version-file-changed) == true && github.event_name == 'push') ||
      github.event_name == 'workflow_dispatch') && fromJSON(needs.workflow-conditions.outputs.version-tag-exists) == false }}
    runs-on: ubuntu-latest
    steps:
    - name: 🏁 Checkout
      uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
    - name: 📄 Docs
      uses: ./LaTeX/container
      with:
        make: pdf
        subdirectory: LaTeX
    - name: 🆙 Upload pdf
      uses: actions/upload-artifact@65c4c4a1ddee5b72f698fdd19549f0f0fb45cf08 # v4.6.0
      with:
        name: pdf
        path: LaTeX/document.pdf
        if-no-files-found: error
  release:
    name: LaTeX 🟢🎶🐦 Release 🚰
    needs: [build]
    permissions:
      contents: write
    runs-on: ubuntu-latest
    steps:
    - name: 🏁 Checkout
      uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
    - name: 🆒 Download dists
      uses: actions/download-artifact@fa0a91b85d4f404e444e00e005971372dc801d16 # v4.1.8
      with:
        name: pdf
        path: LaTeX/artifact
    - name: 🚰 Release
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: >-
        export VER=$(head -1 document.tex | cut -d ' ' -f 3) && 
        gh release create
        LaTeX-v$VER
        "artifact/document.pdf#PDF"
        --generate-notes
        -t "LaTeX: Version $VER"
  # publish:
  #   name: LaTeX 🟢🎶🐦 Publish 📦
  #   needs: [release]
  #   runs-on: ubuntu-latest
  #   steps:
  #   - name: 🏁 Checkout
  #     uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
  #   - name: 🆒 Download dists
  #     uses: actions/download-artifact@fa0a91b85d4f404e444e00e005971372dc801d16 # v4.1.8
  #     with:
  #       name: pdf
  #       path: LaTeX/artifact
  #   - ~ publish to arxiv
  # docs:
  #   name: LaTeX 🟢🎶🐦 Docs 📄
  #   needs: [release, publish]
  #   permissions:
  #     contents: write
  #   runs-on: ubuntu-latest
  #   steps:
  #   - name: 🏁 Checkout
  #     uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
  #   - ~ whatever setup is needed here
  #   - name: 📄 Docs Generation
  #     run: make docs
  #   - name: 📄 Docs Publishing
  #     run: |-
  #       git config --local user.email "actions@github.com"
  #       git config --local user.name "Github Actions"
  #       export SHORTSHA=$(git rev-parse --short HEAD)
  #       git fetch origin gh-pages-LaTeX:gh-pages-LaTeX
  #       git symbolic-ref HEAD refs/heads/gh-pages-LaTeX
  #       cd .. && mv LaTeX/docs/build ../MERGE_TARGET
  #       git rm -rf . && git clean -fxd && git reset
  #       shopt -s dotglob && mkdir LaTeX && mv ../MERGE_TARGET/* LaTeX/
  #       git add .
  #       git commit -m "Build based on $SHORTSHA" --allow-empty
  #       git push --set-upstream origin gh-pages-LaTeX
  #     env:
  #       GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  # docs-merge:
  #   name: GitHub 🐱‍👤 Pages 📄 Merger 🧬
  #   needs: [docs]
  #   permissions:
  #     contents: write
  #     pages: write
  #     id-token: write
  #   uses: ./.github/workflows/github-pages.yaml
  #   with:
  #     merge_from: 'gh-pages-LaTeX'
