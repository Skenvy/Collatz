name: Python 🐍🐍🐍 CI 🦂
on:
  push:
    # branches-ignore:
    # - 'main'
    # # A push to main with the same paths will trigger the CD workflow.
    paths:
    - 'python/**'
    - '.github/workflows/python-*'
  pull_request:
    branches:
    - 'main'
    paths:
    - 'python/**'
    - '.github/workflows/python-*'
  workflow_call: # To be called by build, on a push to main that ups the version
  # Although this is an event itself - and the event payload is the same as the callee,
  # the "event_name" is _also_ the same. The event's in the callee are push and workflow_dispatch.
defaults:
  run:
    shell: bash
    working-directory: python
jobs:
  workflow-conditions:
    name: Python 🐍🐍🐍 Release 🚰 Pre-check; 
    runs-on: ubuntu-latest
    outputs:
      create-release: ${{ steps.version-file-check.outputs.create-release }}
    steps:
    - name: 🏁 Checkout
      uses: actions/checkout@v3
      with:
        fetch-depth: 2
    - name: Check if version files changed
      run: |
        export VERSION_FILE="python/src/collatz/__version__.py"
        [ "$(git diff HEAD^1.. --name-only | grep -e "^$VERSION_FILE$")" == "$VERSION_FILE" ] && echo "::set-output name=create-release::${{toJSON(true)}}" || echo "::set-output name=create-release::${{toJSON(false)}}"
    - name: Notify of conditions
      run: echo "::Notice::create-release is ${{ fromJSON(steps.version-file-check.outputs.create-release) }}"
  # Now any step that should only run on the version change can use "needs: [workflow-conditions]"
  # Which will yield the condition check "if: ${{ needs.workflow-conditions.outputs.create-release == 'true' }}"
  quick-test:
    name: Python 🐍🐍🐍 Pytest 🦂
    if: ${{ github.event_name == 'push' && !(github.event.ref == 'refs/heads/main') }}
    runs-on: ubuntu-latest
    steps:
    - name: 🏁 Checkout
      uses: actions/checkout@v3
    - name: 🐍🐍🐍 Set up Python 3.10
      uses: actions/setup-python@v3
      with:
        python-version: '3.10'
    - name: 🧱 Install build dependencies
      run: |
        make venv
    - name: 🦂 Test with pytest
      run: |
        make test
  full-test:
    name: Python 🐍🐍🐍 Tox 🦂
    needs: [workflow-conditions]
    if: >- 
      ${{ github.event_name == 'pull_request' || github.event_name == 'workflow_dispatch' ||
      (github.event_name == 'push' && github.event.ref == 'refs/heads/main' &&
      fromJSON(needs.workflow-conditions.outputs.create-release) == false) }}
    runs-on: '${{ matrix.os }}'
    strategy:
      matrix:
        python-version: ['3.6', '3.7', '3.8', '3.9', '3.10']
        os: [ubuntu-latest, macOS-latest, windows-latest]
    steps:
    - name: 🏁 Checkout
      uses: actions/checkout@v3
    - name: 🐍🐍🐍 Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v3
      with:
        python-version: ${{ matrix.python-version }}
    - name: 🍑 Install dependencies
      run: |
        python -m pip install --upgrade pip
        python -m pip install tox tox-gh-actions
    - name: 🦂 Test with tox
      run: tox
