name: Python 🐍 Test 🦂 Build 🧱 Release 🚰 and Publish 📦
on:
  push:
    branches:    
    # We could use git.event.push.ref == refs/heads/main
    - 'main'
    paths:
    # We could use contains(github.event.push.commits[][modified], 'python/src/collatz/__version__.py'),
    # but then the steps in one file would get too verbose, so chosing to keep the build and test in distinct workflows.
    - 'python/src/collatz/__version__.py'
  workflow_dispatch: # manual, rather than tag triggering
defaults:
  run:
    shell: bash
    working-directory: python
jobs:
  test:
    name: Python 🐍 Test 🦂
    uses: ./.github/workflows/python-test.yaml
  build:
    name: Python 🐍 Build 🧱
    needs: [test]
    runs-on: ubuntu-latest
    steps:
    - name: 🏁 Checkout
      uses: actions/checkout@v3
    - name: 🐍 Set up Python
      uses: actions/setup-python@v3
      with:
        python-version: '3.10'
    - name: 🧱 Install build dependencies
      run: |
        make venv
    - name: 🎡 Build wheel and source
      run: |
        make build
    - name: 🆙 Upload dists
      uses: actions/upload-artifact@v3
      with:
        name: built-dists
        path: python/dist/
        if-no-files-found: error
  release:
    name: Python 🐍 Release 🚰
    needs: [test, build]
    runs-on: ubuntu-latest
    steps:
    - name: 🏁 Checkout
      uses: actions/checkout@v3
    - name: 🆒 Download dists
      uses: actions/download-artifact@v3
      with:
        name: built-dists
        path: python/dist
    - name: 🚰 Release
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: >-
        export VER=$(cut -d \" -f 2 src/collatz/__version__.py) && 
        gh release create
        python-v$VER
        "$(find dist | grep \\-none\\-any\\.whl)#Wheel"
        "$(find dist | grep \\.tar\\.gz)#Tarball"
        --generate-notes
        -t "Python: Version $VER"
  publish:
    name: Python 🐍 Publish 📦
    needs: [test, build, release]
    runs-on: ubuntu-latest
    steps:
    # Although the dists are built uses checkout to satisfy refs/tags existence
    # which were created by the release, prior to uploading to pypi.
    - name: 🏁 Checkout
      uses: actions/checkout@v3
    - name: 🆒 Download dists
      uses: actions/download-artifact@v3
      with:
        name: built-dists
        path: python/dist
    - name: 📦 Publish to Test PyPI
      uses: pypa/gh-action-pypi-publish@release/v1.5
      with:
        packages_dir: python/dist
        skip_existing: true
        password: ${{ secrets.TEST_PYPI_API_TOKEN }}
        repository_url: https://test.pypi.org/legacy/
    - name: 📦 Publish to PyPI
      if: startsWith(github.ref, 'refs/tags')
      uses: pypa/gh-action-pypi-publish@release/v1.5
      with:
        packages_dir: python/dist
        password: ${{ secrets.PYPI_API_TOKEN }}
